{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3","program":"/Users/DVF/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ryu","/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=3b88119ad924797e","-C","extra-filename=-3b88119ad924797e","--out-dir","/Users/DVF/Projects/created/nftberlin-hackathon/contracts/factory/target/rls/debug/deps","-L","dependency=/Users/DVF/Projects/created/nftberlin-hackathon/contracts/factory/target/rls/debug/deps","--cap-lints","allow","--cfg","integer128","--cfg","must_use_return","--cfg","maybe_uninit","--error-format=json","--sysroot","/Users/DVF/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/DVF/Projects/created/nftberlin-hackathon/contracts/factory/target/rls/debug/deps/libryu-3b88119ad924797e.rmeta"},"prelude":{"crate_id":{"name":"ryu","disambiguator":[17550140734014451512,0]},"crate_root":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src","external_crates":[{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5950131627965951498,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[2741719692070475021,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[2794630430347630357,0]}}],"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":0,"byte_end":3627,"line_start":1,"line_end":111,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":3479,"byte_end":3485,"line_start":106,"line_end":106,"column_start":18,"column_end":24},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":3487,"byte_end":3492,"line_start":106,"line_end":106,"column_start":26,"column_end":31},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":3605,"byte_end":3613,"line_start":110,"line_end":110,"column_start":22,"column_end":30},"alias_span":null,"name":"format32","value":"","parent":{"krate":0,"index":160}},{"kind":"Use","ref_id":{"krate":0,"index":151},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":3615,"byte_end":3623,"line_start":110,"line_end":110,"column_start":32,"column_end":40},"alias_span":null,"name":"format64","value":"","parent":{"krate":0,"index":160}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":0,"byte_end":3627,"line_start":1,"line_end":111,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":56},{"krate":0,"index":61},{"krate":0,"index":83},{"krate":0,"index":88},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":119},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":160}],"decl_id":null,"docs":" Pure Rust implementation of Ryū, an algorithm to quickly convert floating\n point numbers to decimal strings.","sig":null,"attributes":[{"value":"/ Pure Rust implementation of Ryū, an algorithm to quickly convert floating","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ point numbers to decimal strings.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":79,"byte_end":116,"line_start":2,"line_end":2,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":117,"byte_end":120,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ The PLDI'18 paper [*Ryū: fast float-to-string conversion*][paper] by Ulf","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":121,"byte_end":198,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ Adams includes a complete correctness proof of the algorithm. The paper is","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":199,"byte_end":277,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ available under the creative commons CC-BY-SA license.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":278,"byte_end":336,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":337,"byte_end":340,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This Rust implementation is a line-by-line port of Ulf Adams' implementation","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":341,"byte_end":421,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ in C, [https://github.com/ulfjack/ryu][upstream].","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":422,"byte_end":475,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":476,"byte_end":479,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [paper]: https://dl.acm.org/citation.cfm?id=3192369","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":480,"byte_end":535,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/ [upstream]: https://github.com/ulfjack/ryu","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":536,"byte_end":582,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":583,"byte_end":586,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":587,"byte_end":600,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":601,"byte_end":604,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":605,"byte_end":623,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/ fn main() {","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":624,"byte_end":639,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/     let mut buffer = ryu::Buffer::new();","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":640,"byte_end":684,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"/     let printed = buffer.format(1.234);","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":685,"byte_end":728,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/     assert_eq!(printed, \"1.234\");","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":729,"byte_end":766,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":767,"byte_end":772,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":773,"byte_end":780,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":781,"byte_end":784,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Performance","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":785,"byte_end":803,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":804,"byte_end":807,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ You can run upstream's benchmarks with:","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":808,"byte_end":851,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":852,"byte_end":855,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```console","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":856,"byte_end":870,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ $ git clone https://github.com/ulfjack/ryu c-ryu","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":871,"byte_end":923,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/ $ cd c-ryu","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":924,"byte_end":938,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/ $ bazel run -c opt //ryu/benchmark","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":939,"byte_end":977,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":978,"byte_end":985,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":986,"byte_end":989,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ And the same benchmark against our implementation with:","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":990,"byte_end":1049,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1050,"byte_end":1053,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```console","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1054,"byte_end":1068,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/ $ git clone https://github.com/dtolnay/ryu rust-ryu","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1069,"byte_end":1124,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ $ cd rust-ryu","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1125,"byte_end":1142,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ $ cargo run --example upstream_benchmark --release","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1143,"byte_end":1197,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1198,"byte_end":1205,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1206,"byte_end":1209,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ These benchmarks measure the average time to print a 32-bit float and average","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1210,"byte_end":1291,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ time to print a 64-bit float, where the inputs are distributed as uniform random","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1292,"byte_end":1376,"line_start":43,"line_end":43,"column_start":1,"column_end":85}},{"value":"/ bit patterns 32 and 64 bits wide.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1377,"byte_end":1414,"line_start":44,"line_end":44,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1415,"byte_end":1418,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ The upstream C code, the unsafe direct Rust port, and the safe pretty Rust API","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1419,"byte_end":1501,"line_start":46,"line_end":46,"column_start":1,"column_end":83}},{"value":"/ all perform the same, taking around 21 nanoseconds to format a 32-bit float and","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1502,"byte_end":1585,"line_start":47,"line_end":47,"column_start":1,"column_end":84}},{"value":"/ 31 nanoseconds to format a 64-bit float.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1586,"byte_end":1630,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1631,"byte_end":1634,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ There is also a Rust-specific benchmark comparing this implementation to the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1635,"byte_end":1715,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ standard library which you can run with:","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1716,"byte_end":1760,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1761,"byte_end":1764,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```console","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1765,"byte_end":1779,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ $ cargo bench","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1780,"byte_end":1797,"line_start":54,"line_end":54,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1798,"byte_end":1805,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1806,"byte_end":1809,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The benchmark shows Ryu approximately 4-10x faster than the standard library","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1810,"byte_end":1890,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ across a range of f32 and f64 inputs. Measurements are in nanoseconds per","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1891,"byte_end":1968,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ iteration; smaller is better.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":1969,"byte_end":2002,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2003,"byte_end":2006,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ | type=f32 | 0.0  | 0.1234 | 2.718281828459045 | f32::MAX |","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2007,"byte_end":2070,"line_start":61,"line_end":61,"column_start":1,"column_end":64}},{"value":"/ |:--------:|:----:|:------:|:-----------------:|:--------:|","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2071,"byte_end":2134,"line_start":62,"line_end":62,"column_start":1,"column_end":64}},{"value":"/ | RYU      | 3ns  | 28ns   | 23ns              | 22ns     |","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2135,"byte_end":2198,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/ | STD      | 40ns | 106ns  | 128ns             | 110ns    |","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2199,"byte_end":2262,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2263,"byte_end":2266,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ | type=f64 | 0.0  | 0.1234 | 2.718281828459045 | f64::MAX |","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2267,"byte_end":2330,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"/ |:--------:|:----:|:------:|:-----------------:|:--------:|","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2331,"byte_end":2394,"line_start":67,"line_end":67,"column_start":1,"column_end":64}},{"value":"/ | RYU      | 3ns  | 50ns   | 35ns              | 32ns     |","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2395,"byte_end":2458,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ | STD      | 39ns | 105ns  | 128ns             | 202ns    |","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2459,"byte_end":2522,"line_start":69,"line_end":69,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2523,"byte_end":2526,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ## Formatting","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2527,"byte_end":2544,"line_start":71,"line_end":71,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2545,"byte_end":2548,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This library tends to produce more human-readable output than the standard","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2549,"byte_end":2627,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ library's to\\_string, which never uses scientific notation. Here are two","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2628,"byte_end":2704,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ examples:","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2705,"byte_end":2718,"line_start":75,"line_end":75,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2719,"byte_end":2722,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ - *ryu:* 1.23e40, *std:* 12300000000000000000000000000000000000000","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2723,"byte_end":2793,"line_start":77,"line_end":77,"column_start":1,"column_end":71}},{"value":"/ - *ryu:* 1.23e-40, *std:* 0.000000000000000000000000000000000000000123","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2794,"byte_end":2868,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2869,"byte_end":2872,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Both libraries print short decimals such as 0.0000123 without scientific","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2873,"byte_end":2949,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ notation.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2950,"byte_end":2963,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"no_std","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":2965,"byte_end":2975,"line_start":83,"line_end":83,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4154,"byte_end":4160,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":169}],"decl_id":null,"docs":" Safe API for formatting floating point numbers to text.","sig":null,"attributes":[{"value":"/ Safe API for formatting floating point numbers to text.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":3888,"byte_end":3947,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":3948,"byte_end":3951,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":3952,"byte_end":3966,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":3967,"byte_end":3970,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":3971,"byte_end":3989,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ let mut buffer = ryu::Buffer::new();","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":3990,"byte_end":4030,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/ let printed = buffer.format_finite(1.234);","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4031,"byte_end":4077,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(printed, \"1.234\");","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4078,"byte_end":4111,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4112,"byte_end":4119,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4468,"byte_end":4471,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Buffer>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is a cheap operation; you don't need to worry about reusing buffers\n for efficiency.\n","sig":null,"attributes":[{"value":"/ This is a cheap operation; you don't need to worry about reusing buffers","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4294,"byte_end":4370,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ for efficiency.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4375,"byte_end":4394,"line_start":34,"line_end":34,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4399,"byte_end":4408,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5439,"byte_end":5445,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"format","qualname":"<Buffer>::format","value":"pub fn format<F: Float>(&mut Self, F) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Print a floating point number into this buffer and return a reference to\n its string representation within the buffer.","sig":null,"attributes":[{"value":"/ Print a floating point number into this buffer and return a reference to","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4825,"byte_end":4901,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ its string representation within the buffer.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4906,"byte_end":4954,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4959,"byte_end":4962,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Special cases","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4967,"byte_end":4986,"line_start":51,"line_end":51,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4991,"byte_end":4994,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function formats NaN as the string \"NaN\", positive infinity as","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4999,"byte_end":5070,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ \"inf\", and negative infinity as \"-inf\" to match std::fmt.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5075,"byte_end":5136,"line_start":54,"line_end":54,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5141,"byte_end":5144,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ If your input is known to be finite, you may get better performance by","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5149,"byte_end":5223,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ calling the `format_finite` method instead of `format` to avoid the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5228,"byte_end":5299,"line_start":57,"line_end":57,"column_start":5,"column_end":76}},{"value":"/ checks for special cases.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5304,"byte_end":5333,"line_start":58,"line_end":58,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":6511,"byte_end":6524,"line_start":86,"line_end":86,"column_start":12,"column_end":25},"name":"format_finite","qualname":"<Buffer>::format_finite","value":"pub fn format_finite<F: Float>(&mut Self, F) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Print a floating point number into this buffer and return a reference to\n its string representation within the buffer.","sig":null,"attributes":[{"value":"/ Print a floating point number into this buffer and return a reference to","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5618,"byte_end":5694,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ its string representation within the buffer.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5699,"byte_end":5747,"line_start":70,"line_end":70,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5752,"byte_end":5755,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Special cases","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5760,"byte_end":5779,"line_start":72,"line_end":72,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5784,"byte_end":5787,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function **does not** check for NaN or infinity. If the input","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5792,"byte_end":5862,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ number is not a finite float, the printed representation will be some","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5867,"byte_end":5940,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ correctly formatted but unspecified numerical value.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":5945,"byte_end":6001,"line_start":76,"line_end":76,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":6006,"byte_end":6009,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Please check [`is_finite`] yourself before calling this function, or","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":6014,"byte_end":6086,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ check [`is_nan`] and [`is_infinite`] and handle those cases yourself.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":6091,"byte_end":6164,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":6169,"byte_end":6172,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [`is_finite`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_finite","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":6177,"byte_end":6261,"line_start":81,"line_end":81,"column_start":5,"column_end":89}},{"value":"/ [`is_nan`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_nan","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":6266,"byte_end":6344,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ [`is_infinite`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_infinite","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":6349,"byte_end":6437,"line_start":83,"line_end":83,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":6442,"byte_end":6451,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":35},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7731,"byte_end":7736,"line_start":133,"line_end":133,"column_start":11,"column_end":16},"name":"Float","qualname":"::buffer::Float","value":"Float: Sealed","parent":null,"children":[],"decl_id":null,"docs":" A floating point number, f32 or f64, that can be written into a\n [`ryu::Buffer`][Buffer].","sig":null,"attributes":[{"value":"/ A floating point number, f32 or f64, that can be written into a","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7527,"byte_end":7594,"line_start":128,"line_end":128,"column_start":1,"column_end":68}},{"value":"/ [`ryu::Buffer`][Buffer].","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7595,"byte_end":7623,"line_start":129,"line_end":129,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7624,"byte_end":7627,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and cannot be implemented for types outside of the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7628,"byte_end":7703,"line_start":131,"line_end":131,"column_start":1,"column_end":76}},{"value":"/ `ryu` crate.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7704,"byte_end":7720,"line_start":132,"line_end":132,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7803,"byte_end":7809,"line_start":137,"line_end":137,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::buffer::Sealed","value":"Sealed: Copy","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7825,"byte_end":7837,"line_start":138,"line_end":138,"column_start":8,"column_end":20},"name":"is_nonfinite","qualname":"::buffer::Sealed::is_nonfinite","value":"pub fn is_nonfinite(Self) -> bool","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7860,"byte_end":7876,"line_start":139,"line_end":139,"column_start":8,"column_end":24},"name":"format_nonfinite","qualname":"::buffer::Sealed::format_nonfinite","value":"pub fn format_nonfinite(Self) -> &'static str","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7914,"byte_end":7933,"line_start":140,"line_end":140,"column_start":15,"column_end":34},"name":"write_to_ryu_buffer","qualname":"::buffer::Sealed::write_to_ryu_buffer","value":"pub unsafe fn write_to_ryu_buffer(Self, *mut u8) -> usize","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":151},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72627,"byte_end":72635,"line_start":55,"line_end":55,"column_start":15,"column_end":23},"name":"format64","qualname":"::pretty::format64","value":"pub unsafe fn format64(f64, *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f64 to the given buffer and return number of bytes written.","sig":null,"attributes":[{"value":"/ Print f64 to the given buffer and return number of bytes written.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71190,"byte_end":71259,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71260,"byte_end":71263,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ At most 24 bytes will be written.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71264,"byte_end":71301,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71302,"byte_end":71305,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ## Special cases","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71306,"byte_end":71326,"line_start":20,"line_end":20,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71327,"byte_end":71330,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function **does not** check for NaN or infinity. If the input","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71331,"byte_end":71401,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ number is not a finite float, the printed representation will be some","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71402,"byte_end":71475,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ correctly formatted but unspecified numerical value.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71476,"byte_end":71532,"line_start":24,"line_end":24,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71533,"byte_end":71536,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Please check [`is_finite`] yourself before calling this function, or","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71537,"byte_end":71609,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ check [`is_nan`] and [`is_infinite`] and handle those cases yourself.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71610,"byte_end":71683,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71684,"byte_end":71687,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`is_finite`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_finite","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71688,"byte_end":71772,"line_start":29,"line_end":29,"column_start":1,"column_end":85}},{"value":"/ [`is_nan`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_nan","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71773,"byte_end":71851,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ [`is_infinite`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_infinite","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71852,"byte_end":71940,"line_start":31,"line_end":31,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71941,"byte_end":71944,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ## Safety","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71945,"byte_end":71958,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71959,"byte_end":71962,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The `result` pointer argument must point to sufficiently many writable bytes","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":71963,"byte_end":72043,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ to hold Ryū's representation of `f`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72044,"byte_end":72085,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72086,"byte_end":72089,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72090,"byte_end":72104,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72105,"byte_end":72108,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72109,"byte_end":72127,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ use std::{mem::MaybeUninit, slice, str};","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72128,"byte_end":72172,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72173,"byte_end":72176,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let f = 1.234f64;","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72177,"byte_end":72198,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72199,"byte_end":72202,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72203,"byte_end":72215,"line_start":45,"line_end":45,"column_start":1,"column_end":13}},{"value":"/     let mut buffer = [MaybeUninit::<u8>::uninit(); 24];","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72216,"byte_end":72275,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/     let len = ryu::raw::format64(f, buffer.as_mut_ptr() as *mut u8);","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72276,"byte_end":72348,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/     let slice = slice::from_raw_parts(buffer.as_ptr() as *const u8, len);","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72349,"byte_end":72426,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/     let print = str::from_utf8_unchecked(slice);","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72427,"byte_end":72479,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(print, \"1.234\");","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72480,"byte_end":72515,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72516,"byte_end":72521,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72522,"byte_end":72529,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":72558,"byte_end":72566,"line_start":53,"line_end":53,"column_start":29,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":152},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76606,"byte_end":76614,"line_start":162,"line_end":162,"column_start":15,"column_end":23},"name":"format32","qualname":"::pretty::format32","value":"pub unsafe fn format32(f32, *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f32 to the given buffer and return number of bytes written.","sig":null,"attributes":[{"value":"/ Print f32 to the given buffer and return number of bytes written.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75169,"byte_end":75238,"line_start":123,"line_end":123,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75239,"byte_end":75242,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ At most 16 bytes will be written.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75243,"byte_end":75280,"line_start":125,"line_end":125,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75281,"byte_end":75284,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Special cases","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75285,"byte_end":75305,"line_start":127,"line_end":127,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75306,"byte_end":75309,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This function **does not** check for NaN or infinity. If the input","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75310,"byte_end":75380,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/ number is not a finite float, the printed representation will be some","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75381,"byte_end":75454,"line_start":130,"line_end":130,"column_start":1,"column_end":74}},{"value":"/ correctly formatted but unspecified numerical value.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75455,"byte_end":75511,"line_start":131,"line_end":131,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75512,"byte_end":75515,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Please check [`is_finite`] yourself before calling this function, or","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75516,"byte_end":75588,"line_start":133,"line_end":133,"column_start":1,"column_end":73}},{"value":"/ check [`is_nan`] and [`is_infinite`] and handle those cases yourself.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75589,"byte_end":75662,"line_start":134,"line_end":134,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75663,"byte_end":75666,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ [`is_finite`]: https://doc.rust-lang.org/std/primitive.f32.html#method.is_finite","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75667,"byte_end":75751,"line_start":136,"line_end":136,"column_start":1,"column_end":85}},{"value":"/ [`is_nan`]: https://doc.rust-lang.org/std/primitive.f32.html#method.is_nan","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75752,"byte_end":75830,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/ [`is_infinite`]: https://doc.rust-lang.org/std/primitive.f32.html#method.is_infinite","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75831,"byte_end":75919,"line_start":138,"line_end":138,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75920,"byte_end":75923,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ## Safety","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75924,"byte_end":75937,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75938,"byte_end":75941,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ The `result` pointer argument must point to sufficiently many writable bytes","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":75942,"byte_end":76022,"line_start":142,"line_end":142,"column_start":1,"column_end":81}},{"value":"/ to hold Ryū's representation of `f`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76023,"byte_end":76064,"line_start":143,"line_end":143,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76065,"byte_end":76068,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76069,"byte_end":76083,"line_start":145,"line_end":145,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76084,"byte_end":76087,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76088,"byte_end":76106,"line_start":147,"line_end":147,"column_start":1,"column_end":19}},{"value":"/ use std::{mem::MaybeUninit, slice, str};","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76107,"byte_end":76151,"line_start":148,"line_end":148,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76152,"byte_end":76155,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ let f = 1.234f32;","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76156,"byte_end":76177,"line_start":150,"line_end":150,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76178,"byte_end":76181,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76182,"byte_end":76194,"line_start":152,"line_end":152,"column_start":1,"column_end":13}},{"value":"/     let mut buffer = [MaybeUninit::<u8>::uninit(); 16];","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76195,"byte_end":76254,"line_start":153,"line_end":153,"column_start":1,"column_end":60}},{"value":"/     let len = ryu::raw::format32(f, buffer.as_mut_ptr() as *mut u8);","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76255,"byte_end":76327,"line_start":154,"line_end":154,"column_start":1,"column_end":73}},{"value":"/     let slice = slice::from_raw_parts(buffer.as_ptr() as *const u8, len);","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76328,"byte_end":76405,"line_start":155,"line_end":155,"column_start":1,"column_end":78}},{"value":"/     let print = str::from_utf8_unchecked(slice);","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76406,"byte_end":76458,"line_start":156,"line_end":156,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(print, \"1.234\");","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76459,"byte_end":76494,"line_start":157,"line_end":157,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76495,"byte_end":76500,"line_start":158,"line_end":158,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76501,"byte_end":76508,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/pretty/mod.rs","byte_start":76537,"byte_end":76545,"line_start":160,"line_end":160,"column_start":29,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":160},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":3578,"byte_end":3581,"line_start":109,"line_end":109,"column_start":9,"column_end":12},"name":"raw","qualname":"::raw","value":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":165}],"decl_id":null,"docs":" Unsafe functions that mirror the API of the C implementation of Ryū.\n","sig":null,"attributes":[{"value":"/ Unsafe functions that mirror the API of the C implementation of Ryū.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/lib.rs","byte_start":3496,"byte_end":3569,"line_start":108,"line_end":108,"column_start":1,"column_end":73}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4281,"byte_end":4287,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7398,"byte_end":7404,"line_start":120,"line_end":120,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":4281,"byte_end":4287,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7398,"byte_end":7404,"line_start":120,"line_end":120,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3035}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7738,"byte_end":7744,"line_start":133,"line_end":133,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":38},"to":{"krate":0,"index":35}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.3/src/buffer/mod.rs","byte_start":7811,"byte_end":7815,"line_start":137,"line_end":137,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":38}}]}