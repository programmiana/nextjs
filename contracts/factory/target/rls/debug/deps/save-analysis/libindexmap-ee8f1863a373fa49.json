{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2","program":"/Users/DVF/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","indexmap","/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=ee8f1863a373fa49","-C","extra-filename=-ee8f1863a373fa49","--out-dir","/Users/DVF/Projects/created/nftberlin-hackathon/contracts/factory/target/rls/debug/deps","-L","dependency=/Users/DVF/Projects/created/nftberlin-hackathon/contracts/factory/target/rls/debug/deps","--cap-lints","allow","--cfg","has_std","--error-format=json","--sysroot","/Users/DVF/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/DVF/Projects/created/nftberlin-hackathon/contracts/factory/target/rls/debug/deps/libindexmap-ee8f1863a373fa49.rmeta"},"prelude":{"crate_id":{"name":"indexmap","disambiguator":[9395670283942514672,0]},"crate_root":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src","external_crates":[{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18005471550560613154,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5950131627965951498,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2741719692070475021,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2794630430347630357,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11571400143354356751,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7193487377502419209,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3984647143510438201,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12184698882915890589,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[11618273138748747847,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10066305145840536466,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6325594472561512306,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17413800936977720645,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[13105407555381832082,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2532692864303013170,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3831727617617568246,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[14168850698196268560,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[14481778817480203751,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[3413086096283251618,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[5901939098322418461,0]}}],"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":0,"byte_end":4467,"line_start":1,"line_end":164,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":11344,"byte_end":11355,"line_start":9,"line_end":9,"column_start":23,"column_end":34},"alias_span":null,"name":"MutableKeys","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":12},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2894,"byte_end":2904,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1158},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2919,"byte_end":2927,"line_start":91,"line_end":91,"column_start":14,"column_end":22},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1229},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2942,"byte_end":2950,"line_start":92,"line_end":92,"column_start":14,"column_end":22},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":0,"byte_end":4467,"line_start":1,"line_end":164,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":8},{"krate":0,"index":19},{"krate":0,"index":53},{"krate":0,"index":68},{"krate":0,"index":699},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1259},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1265},{"krate":0,"index":1271},{"krate":0,"index":1274},{"krate":0,"index":1278},{"krate":0,"index":1129},{"krate":0,"index":1140}],"decl_id":null,"docs":" [`IndexMap`] is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":0,"byte_end":21,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/ [`IndexMap`] is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":113,"byte_end":188,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":189,"byte_end":245,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":246,"byte_end":249,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`] is a corresponding hash set using the same implementation and","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":250,"byte_end":328,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ with similar properties.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":329,"byte_end":357,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":358,"byte_end":361,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`]: map/struct.IndexMap.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":362,"byte_end":404,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/ [`IndexSet`]: set/struct.IndexSet.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":405,"byte_end":447,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":448,"byte_end":451,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":452,"byte_end":455,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ### Feature Highlights","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":456,"byte_end":482,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":483,"byte_end":486,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`] and [`IndexSet`] are drop-in compatible with the std `HashMap`","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":487,"byte_end":566,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ and `HashSet`, but they also have some features of note:","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":567,"byte_end":627,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":628,"byte_end":631,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - The ordering semantics (see their documentation for details)","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":632,"byte_end":698,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/ - Sorting methods and the [`.pop()`][IndexMap::pop] methods.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":699,"byte_end":763,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"/ - The [`Equivalent`] trait, which offers more flexible equality definitions","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":764,"byte_end":843,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   between borrowed and owned versions of keys.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":844,"byte_end":894,"line_start":23,"line_end":23,"column_start":1,"column_end":51}},{"value":"/ - The [`MutableKeys`][map::MutableKeys] trait, which gives opt-in mutable","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":895,"byte_end":972,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/   access to hash map keys.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":973,"byte_end":1003,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1004,"byte_end":1007,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ### Rust Version","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1008,"byte_end":1028,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1029,"byte_end":1032,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This version of indexmap requires Rust 1.18 or later, or 1.30+ for","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1033,"byte_end":1103,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ development builds, and Rust 1.36+ for using with `alloc` (without `std`),","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1104,"byte_end":1182,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ see below.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1183,"byte_end":1197,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1198,"byte_end":1201,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The indexmap 1.x release series will use a carefully considered version","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1202,"byte_end":1277,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ upgrade policy, where in a later 1.x version, we will raise the minimum","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1278,"byte_end":1353,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ required Rust version.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1354,"byte_end":1380,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1381,"byte_end":1384,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ## No Standard Library Targets","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1385,"byte_end":1419,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1420,"byte_end":1423,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ From Rust 1.36, this crate supports being built without `std`, requiring","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1424,"byte_end":1500,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ `alloc` instead. This is enabled automatically when it is detected that","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1501,"byte_end":1576,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ `std` is not available. There is no crate feature to enable/disable to","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1577,"byte_end":1651,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ trigger this. It can be tested by building for a std-less target.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1652,"byte_end":1721,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1722,"byte_end":1725,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ - Creating maps and sets using [`new`][IndexMap::new] and","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1726,"byte_end":1787,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"/ [`with_capacity`][IndexMap::with_capacity] is unavailable without `std`.  ","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1788,"byte_end":1866,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/   Use methods [`IndexMap::default`][def],","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1867,"byte_end":1912,"line_start":46,"line_end":46,"column_start":1,"column_end":46}},{"value":"/   [`with_hasher`][IndexMap::with_hasher],","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1913,"byte_end":1958,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/   [`with_capacity_and_hasher`][IndexMap::with_capacity_and_hasher] instead.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":1959,"byte_end":2038,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/   A no-std compatible hasher will be needed as well, for example","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2039,"byte_end":2107,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/   from the crate `twox-hash`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2108,"byte_end":2141,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ - Macros [`indexmap!`] and [`indexset!`] are unavailable without `std`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2142,"byte_end":2217,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2218,"byte_end":2221,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [def]: map/struct.IndexMap.html#impl-Default","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2222,"byte_end":2270,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":12},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8154,"byte_end":8164,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"Equivalent","qualname":"::equivalent::Equivalent","value":"Equivalent<K: ?Sized>","parent":null,"children":[{"krate":0,"index":14}],"decl_id":null,"docs":" Key equivalence trait.","sig":null,"attributes":[{"value":"/ Key equivalence trait.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":7764,"byte_end":7790,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":7791,"byte_end":7794,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait allows hash table lookup to be customized.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":7795,"byte_end":7852,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/ It has one blanket implementation that uses the regular `Borrow` solution,","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":7853,"byte_end":7931,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ just like `HashMap` and `BTreeMap` do, so that you can pass `&str` to lookup","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":7932,"byte_end":8012,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ into a map with `String` keys and so on.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8013,"byte_end":8057,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8058,"byte_end":8061,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8062,"byte_end":8076,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8077,"byte_end":8080,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The implementor **must** hash like `K`, if it is hashable.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8081,"byte_end":8143,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8252,"byte_end":8262,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"equivalent","qualname":"::equivalent::Equivalent::equivalent","value":"pub fn equivalent(&Self, &K) -> bool","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Compare self to `key` and return `true` if they are equal.\n","sig":null,"attributes":[{"value":"/ Compare self to `key` and return `true` if they are equal.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8182,"byte_end":8244,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":33},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8570,"byte_end":8583,"line_start":6,"line_end":6,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::mutable_keys::PrivateMarker","value":"PrivateMarker {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9131,"byte_end":9142,"line_start":20,"line_end":20,"column_start":11,"column_end":22},"name":"MutableKeys","qualname":"::mutable_keys::MutableKeys","value":"MutableKeys","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41}],"decl_id":null,"docs":" Opt-in mutable access to keys.","sig":null,"attributes":[{"value":"/ Opt-in mutable access to keys.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8588,"byte_end":8622,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8623,"byte_end":8626,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ These methods expose `&mut K`, mutable references to the key as it is stored","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8627,"byte_end":8707,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ in the map.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8708,"byte_end":8723,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/ You are allowed to modify the keys in the hashmap **if the modifcation","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8724,"byte_end":8798,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ does not change the key’s hash and equality**.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8799,"byte_end":8851,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8852,"byte_end":8855,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ If keys are modified erronously, you can no longer look them up.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8856,"byte_end":8924,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ This is sound (memory safe) but a logical error hazard (just like","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8925,"byte_end":8994,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/ implementing PartialEq, Eq, or Hash incorrectly would be).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":8995,"byte_end":9057,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9058,"byte_end":9061,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `use` this trait to enable its methods for `IndexMap`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9062,"byte_end":9120,"line_start":19,"line_end":19,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":35},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9154,"byte_end":9157,"line_start":21,"line_end":21,"column_start":10,"column_end":13},"name":"Key","qualname":"::mutable_keys::MutableKeys::Key","value":"type Key;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9168,"byte_end":9173,"line_start":22,"line_end":22,"column_start":10,"column_end":15},"name":"Value","qualname":"::mutable_keys::MutableKeys::Value","value":"type Value;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9245,"byte_end":9258,"line_start":25,"line_end":25,"column_start":8,"column_end":21},"name":"get_full_mut2","qualname":"::mutable_keys::MutableKeys::get_full_mut2","value":"pub fn get_full_mut2<Q: ?Sized>(&mut Self, &Q)\n-> Option<(usize, &mut Self::Key, &mut Self::Value)> where Q: Hash +\nEquivalent<Self::Key>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Return item index, mutable reference to key and value\n","sig":null,"attributes":[{"value":"/ Return item index, mutable reference to key and value","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9180,"byte_end":9237,"line_start":24,"line_end":24,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9694,"byte_end":9701,"line_start":39,"line_end":39,"column_start":8,"column_end":15},"name":"retain2","qualname":"::mutable_keys::MutableKeys::retain2","value":"pub fn retain2<F>(&mut Self, F) where\nF: FnMut(&mut Self::Key, &mut Self::Value) -> bool","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9422,"byte_end":9494,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9499,"byte_end":9533,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9538,"byte_end":9541,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9546,"byte_end":9618,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9623,"byte_end":9633,"line_start":36,"line_end":36,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9638,"byte_end":9641,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9646,"byte_end":9686,"line_start":38,"line_end":38,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9993,"byte_end":10009,"line_start":46,"line_end":46,"column_start":8,"column_end":24},"name":"__private_marker","qualname":"::mutable_keys::MutableKeys::__private_marker","value":"pub fn __private_marker(&Self) -> PrivateMarker","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" This method is not useful in itself – it is there to “seal” the trait\n for external implementation, so that we can add methods without\n causing breaking changes.\n","sig":null,"attributes":[{"value":"/ This method is not useful in itself – it is there to “seal” the trait","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9800,"byte_end":9879,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ for external implementation, so that we can add methods without","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9884,"byte_end":9951,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ causing breaking changes.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":9956,"byte_end":9985,"line_start":45,"line_end":45,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":68},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":1147},{"krate":0,"index":1152},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":172},{"krate":0,"index":1158},{"krate":0,"index":1164},{"krate":0,"index":1169},{"krate":0,"index":1175},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":199},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":212},{"krate":0,"index":224},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":248},{"krate":0,"index":260},{"krate":0,"index":265},{"krate":0,"index":273},{"krate":0,"index":290},{"krate":0,"index":295},{"krate":0,"index":303},{"krate":0,"index":313},{"krate":0,"index":318},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":394},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":456},{"krate":0,"index":461},{"krate":0,"index":466},{"krate":0,"index":471},{"krate":0,"index":476},{"krate":0,"index":481},{"krate":0,"index":486},{"krate":0,"index":491},{"krate":0,"index":496},{"krate":0,"index":501},{"krate":0,"index":506},{"krate":0,"index":511},{"krate":0,"index":516},{"krate":0,"index":521},{"krate":0,"index":526},{"krate":0,"index":531},{"krate":0,"index":536},{"krate":0,"index":541},{"krate":0,"index":546},{"krate":0,"index":551},{"krate":0,"index":556},{"krate":0,"index":561},{"krate":0,"index":566},{"krate":0,"index":571},{"krate":0,"index":576},{"krate":0,"index":581},{"krate":0,"index":585},{"krate":0,"index":589},{"krate":0,"index":594},{"krate":0,"index":598},{"krate":0,"index":602},{"krate":0,"index":607},{"krate":0,"index":612},{"krate":0,"index":616},{"krate":0,"index":624},{"krate":0,"index":632},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":654},{"krate":0,"index":661},{"krate":0,"index":667},{"krate":0,"index":673},{"krate":0,"index":681},{"krate":0,"index":686},{"krate":0,"index":695}],"decl_id":null,"docs":" `IndexMap` is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.\n","sig":null,"attributes":[{"value":"/ `IndexMap` is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":11105,"byte_end":11178,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":11179,"byte_end":11235,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18908,"byte_end":18916,"line_start":297,"line_end":297,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::map::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163}],"decl_id":null,"docs":" A hash table where the iteration order of the key-value pairs is independent\n of the hash values of the keys.","sig":null,"attributes":[{"value":"/ A hash table where the iteration order of the key-value pairs is independent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17455,"byte_end":17535,"line_start":254,"line_end":254,"column_start":1,"column_end":81}},{"value":"/ of the hash values of the keys.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17536,"byte_end":17571,"line_start":255,"line_end":255,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17572,"byte_end":17575,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashMap`, but also","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17576,"byte_end":17653,"line_start":257,"line_end":257,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17654,"byte_end":17682,"line_start":258,"line_end":258,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17683,"byte_end":17686,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17687,"byte_end":17698,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17699,"byte_end":17702,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs have a consistent order that is determined by","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17703,"byte_end":17772,"line_start":262,"line_end":262,"column_start":1,"column_end":70}},{"value":"/ the sequence of insertion and removal calls on the map. The order does","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17773,"byte_end":17847,"line_start":263,"line_end":263,"column_start":1,"column_end":75}},{"value":"/ not depend on the keys or the hash function at all.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17848,"byte_end":17903,"line_start":264,"line_end":264,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17904,"byte_end":17907,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the map in *the order*.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17908,"byte_end":17958,"line_start":266,"line_end":266,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17959,"byte_end":17962,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":17963,"byte_end":18037,"line_start":268,"line_end":268,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18038,"byte_end":18114,"line_start":269,"line_end":269,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18115,"byte_end":18180,"line_start":270,"line_end":270,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18181,"byte_end":18184,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18185,"byte_end":18198,"line_start":272,"line_end":272,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18199,"byte_end":18202,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs are indexed in a compact range without holes in the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18203,"byte_end":18278,"line_start":274,"line_end":274,"column_start":1,"column_end":76}},{"value":"/ range `0..self.len()`. For example, the method `.get_full` looks up the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18279,"byte_end":18354,"line_start":275,"line_end":275,"column_start":1,"column_end":76}},{"value":"/ index for a key, and the method `.get_index` looks up the key-value pair by","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18355,"byte_end":18434,"line_start":276,"line_end":276,"column_start":1,"column_end":80}},{"value":"/ index.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18435,"byte_end":18445,"line_start":277,"line_end":277,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18446,"byte_end":18449,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18450,"byte_end":18464,"line_start":279,"line_end":279,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18465,"byte_end":18468,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18469,"byte_end":18476,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexMap;","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18477,"byte_end":18504,"line_start":282,"line_end":282,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18505,"byte_end":18508,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ // count the frequency of each letter in a sentence.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18509,"byte_end":18565,"line_start":284,"line_end":284,"column_start":1,"column_end":57}},{"value":"/ let mut letters = IndexMap::new();","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18566,"byte_end":18604,"line_start":285,"line_end":285,"column_start":1,"column_end":39}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18605,"byte_end":18656,"line_start":286,"line_end":286,"column_start":1,"column_end":52}},{"value":"/     *letters.entry(ch).or_insert(0) += 1;","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18657,"byte_end":18702,"line_start":287,"line_end":287,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18703,"byte_end":18708,"line_start":288,"line_end":288,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18709,"byte_end":18712,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18713,"byte_end":18746,"line_start":290,"line_end":290,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18747,"byte_end":18780,"line_start":291,"line_end":291,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18781,"byte_end":18814,"line_start":292,"line_end":292,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18815,"byte_end":18855,"line_start":293,"line_end":293,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18856,"byte_end":18863,"line_start":294,"line_end":294,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":18881,"byte_end":18896,"line_start":296,"line_end":296,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22231,"byte_end":22234,"line_start":426,"line_end":426,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new map. (Does not allocate.)","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22177,"byte_end":22219,"line_start":425,"line_end":425,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22447,"byte_end":22460,"line_start":434,"line_end":434,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22289,"byte_end":22358,"line_start":430,"line_end":430,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22363,"byte_end":22392,"line_start":431,"line_end":431,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22397,"byte_end":22400,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22405,"byte_end":22435,"line_start":433,"line_end":433,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22744,"byte_end":22768,"line_start":444,"line_end":444,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22586,"byte_end":22655,"line_start":440,"line_end":440,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22660,"byte_end":22689,"line_start":441,"line_end":441,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22694,"byte_end":22697,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22702,"byte_end":22732,"line_start":443,"line_end":443,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23671,"byte_end":23674,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23564,"byte_end":23616,"line_start":471,"line_end":471,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23621,"byte_end":23624,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23629,"byte_end":23659,"line_start":473,"line_end":473,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23832,"byte_end":23840,"line_start":481,"line_end":481,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23728,"byte_end":23777,"line_start":478,"line_end":478,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23782,"byte_end":23785,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23790,"byte_end":23820,"line_start":480,"line_end":480,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23945,"byte_end":23956,"line_start":486,"line_end":486,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexMap<K, V, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new map with `hash_builder`","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":23893,"byte_end":23933,"line_start":485,"line_end":485,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":24151,"byte_end":24157,"line_start":494,"line_end":494,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexMap<K, V, S>>::hasher","value":"pub fn hasher(&Self) -> &S where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the map's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the map's `BuildHasher`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":24089,"byte_end":24139,"line_start":493,"line_end":493,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":24291,"byte_end":24299,"line_start":502,"line_end":502,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":24249,"byte_end":24279,"line_start":501,"line_end":501,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":242},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26887,"byte_end":26895,"line_start":597,"line_end":597,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":238},"children":[],"decl_id":null,"docs":" Existing slot with equivalent key.\n","sig":null,"attributes":[{"value":"/ Existing slot with equivalent key.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26844,"byte_end":26882,"line_start":596,"line_end":596,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":245},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26978,"byte_end":26984,"line_start":599,"line_end":599,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":238},"children":[],"decl_id":null,"docs":" Vacant slot (no equivalent key in the map).\n","sig":null,"attributes":[{"value":"/ Vacant slot (no equivalent key in the map).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26926,"byte_end":26973,"line_start":598,"line_end":598,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":238},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26814,"byte_end":26819,"line_start":595,"line_end":595,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"pub enum Entry<'a, K: 'a, V: 'a> {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":245}],"decl_id":null,"docs":" Entry for an existing key-value pair or a vacant location to\n insert one.\n","sig":null,"attributes":[{"value":"/ Entry for an existing key-value pair or a vacant location to","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26724,"byte_end":26788,"line_start":593,"line_end":593,"column_start":1,"column_end":65}},{"value":"/ insert one.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":26789,"byte_end":26804,"line_start":594,"line_end":594,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27111,"byte_end":27120,"line_start":604,"line_end":604,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27049,"byte_end":27099,"line_start":603,"line_end":603,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27373,"byte_end":27387,"line_start":612,"line_end":612,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27311,"byte_end":27361,"line_start":611,"line_end":611,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27624,"byte_end":27627,"line_start":622,"line_end":622,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27879,"byte_end":27884,"line_start":630,"line_end":630,"column_start":12,"column_end":17},"name":"index","qualname":"<Entry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair exists or will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair exists or will be inserted.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27794,"byte_end":27867,"line_start":629,"line_end":629,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28111,"byte_end":28121,"line_start":638,"line_end":638,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies the entry if it is occupied.\n","sig":null,"attributes":[{"value":"/ Modifies the entry if it is occupied.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28058,"byte_end":28099,"line_start":637,"line_end":637,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28633,"byte_end":28643,"line_start":655,"line_end":655,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where V: Default","parent":null,"children":[],"decl_id":null,"docs":" Inserts a default-constructed value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts a default-constructed value in the entry if it is vacant and returns a mutable","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28371,"byte_end":28461,"line_start":651,"line_end":651,"column_start":5,"column_end":95}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28466,"byte_end":28558,"line_start":652,"line_end":652,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28563,"byte_end":28566,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28571,"byte_end":28621,"line_start":654,"line_end":654,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":265},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":29354,"byte_end":29367,"line_start":679,"line_end":679,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"decl_id":null,"docs":" A view into an occupied entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `IndexMap`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":29219,"byte_end":29269,"line_start":675,"line_end":675,"column_start":1,"column_end":51}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":29270,"byte_end":29307,"line_start":676,"line_end":676,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":29308,"byte_end":29311,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":29312,"byte_end":29342,"line_start":678,"line_end":678,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":29528,"byte_end":29531,"line_start":687,"line_end":687,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":29582,"byte_end":29585,"line_start":690,"line_end":690,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":29662,"byte_end":29669,"line_start":693,"line_end":693,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30009,"byte_end":30014,"line_start":704,"line_end":704,"column_start":12,"column_end":17},"name":"index","qualname":"<OccupiedEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the key-value pair\n","sig":null,"attributes":[{"value":"/ Return the index of the key-value pair","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":29955,"byte_end":29997,"line_start":703,"line_end":703,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30069,"byte_end":30077,"line_start":707,"line_end":707,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30248,"byte_end":30254,"line_start":712,"line_end":712,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry to `value`, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry to `value`, and returns the entry's old value.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30158,"byte_end":30236,"line_start":711,"line_end":711,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30497,"byte_end":30503,"line_start":719,"line_end":719,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30333,"byte_end":30419,"line_start":716,"line_end":716,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30424,"byte_end":30427,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove()`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30432,"byte_end":30485,"line_start":718,"line_end":718,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30918,"byte_end":30929,"line_start":730,"line_end":730,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<OccupiedEntry>::swap_remove","value":"pub fn swap_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30555,"byte_end":30641,"line_start":723,"line_end":723,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30646,"byte_end":30649,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30654,"byte_end":30726,"line_start":725,"line_end":725,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30731,"byte_end":30794,"line_start":726,"line_end":726,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30799,"byte_end":30853,"line_start":727,"line_end":727,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30858,"byte_end":30861,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30866,"byte_end":30906,"line_start":729,"line_end":729,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31347,"byte_end":31359,"line_start":741,"line_end":741,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<OccupiedEntry>::shift_remove","value":"pub fn shift_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":30989,"byte_end":31075,"line_start":734,"line_end":734,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31080,"byte_end":31083,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31088,"byte_end":31154,"line_start":736,"line_end":736,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31159,"byte_end":31220,"line_start":737,"line_end":737,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31225,"byte_end":31282,"line_start":738,"line_end":738,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31287,"byte_end":31290,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31295,"byte_end":31335,"line_start":740,"line_end":740,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31578,"byte_end":31590,"line_start":748,"line_end":748,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31420,"byte_end":31494,"line_start":745,"line_end":745,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31499,"byte_end":31502,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry()`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31507,"byte_end":31566,"line_start":747,"line_end":747,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32004,"byte_end":32021,"line_start":759,"line_end":759,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<OccupiedEntry>::swap_remove_entry","value":"pub fn swap_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31653,"byte_end":31727,"line_start":752,"line_end":752,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31732,"byte_end":31735,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31740,"byte_end":31812,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31817,"byte_end":31880,"line_start":755,"line_end":755,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31885,"byte_end":31939,"line_start":756,"line_end":756,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31944,"byte_end":31947,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":31952,"byte_end":31992,"line_start":758,"line_end":758,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32456,"byte_end":32474,"line_start":770,"line_end":770,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<OccupiedEntry>::shift_remove_entry","value":"pub fn shift_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32110,"byte_end":32184,"line_start":763,"line_end":763,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32189,"byte_end":32192,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32197,"byte_end":32263,"line_start":765,"line_end":765,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32268,"byte_end":32329,"line_start":766,"line_end":766,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32334,"byte_end":32391,"line_start":767,"line_end":767,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32396,"byte_end":32399,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32404,"byte_end":32444,"line_start":769,"line_end":769,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":295},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33002,"byte_end":33013,"line_start":788,"line_end":788,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"decl_id":null,"docs":" A view into a vacant entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `IndexMap`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32870,"byte_end":32917,"line_start":784,"line_end":784,"column_start":1,"column_end":48}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32918,"byte_end":32955,"line_start":785,"line_end":785,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32956,"byte_end":32959,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32960,"byte_end":32990,"line_start":787,"line_end":787,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33175,"byte_end":33178,"line_start":796,"line_end":796,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33229,"byte_end":33237,"line_start":799,"line_end":799,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33353,"byte_end":33358,"line_start":803,"line_end":803,"column_start":12,"column_end":17},"name":"index","qualname":"<VacantEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair will be inserted.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33278,"byte_end":33341,"line_start":802,"line_end":802,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33417,"byte_end":33423,"line_start":806,"line_end":806,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34772,"byte_end":34777,"line_start":855,"line_end":855,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all key-value pairs in the map, while preserving its capacity.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34644,"byte_end":34717,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34722,"byte_end":34725,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34730,"byte_end":34760,"line_start":854,"line_end":854,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34949,"byte_end":34956,"line_start":862,"line_end":862,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexMap<K, V, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more key-value pairs.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more key-value pairs.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34829,"byte_end":34888,"line_start":859,"line_end":859,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34893,"byte_end":34896,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ FIXME Not implemented fully yet.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34901,"byte_end":34937,"line_start":861,"line_end":861,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36533,"byte_end":36539,"line_start":906,"line_end":906,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35881,"byte_end":35920,"line_start":893,"line_end":893,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35925,"byte_end":35928,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":35933,"byte_end":36004,"line_start":895,"line_end":895,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36009,"byte_end":36082,"line_start":896,"line_end":896,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `Some(_)`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36087,"byte_end":36153,"line_start":897,"line_end":897,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36158,"byte_end":36161,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36166,"byte_end":36236,"line_start":899,"line_end":899,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `None` is returned.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36241,"byte_end":36293,"line_start":900,"line_end":900,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36298,"byte_end":36301,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36306,"byte_end":36356,"line_start":902,"line_end":902,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36361,"byte_end":36364,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36369,"byte_end":36444,"line_start":904,"line_end":904,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":36449,"byte_end":36521,"line_start":905,"line_end":905,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38091,"byte_end":38102,"line_start":942,"line_end":942,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexMap<K, V, S>>::insert_full","value":"pub fn insert_full(&mut Self, K, V) -> (usize, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map, and get their index.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map, and get their index.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37400,"byte_end":37460,"line_start":929,"line_end":929,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37465,"byte_end":37468,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37473,"byte_end":37544,"line_start":931,"line_end":931,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37549,"byte_end":37622,"line_start":932,"line_end":932,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `(index, Some(_))`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37627,"byte_end":37702,"line_start":933,"line_end":933,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37707,"byte_end":37710,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37715,"byte_end":37785,"line_start":935,"line_end":935,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `(index, None)` is returned.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37790,"byte_end":37851,"line_start":936,"line_end":936,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37856,"byte_end":37859,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37864,"byte_end":37914,"line_start":938,"line_end":938,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37919,"byte_end":37922,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":37927,"byte_end":38002,"line_start":940,"line_end":940,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38007,"byte_end":38079,"line_start":941,"line_end":941,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38652,"byte_end":38657,"line_start":959,"line_end":959,"column_start":12,"column_end":17},"name":"entry","qualname":"<IndexMap<K, V, S>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key’s corresponding entry in the map for insertion and/or\n in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the given key’s corresponding entry in the map for insertion and/or","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38469,"byte_end":38546,"line_start":955,"line_end":955,"column_start":5,"column_end":80}},{"value":"/ in-place manipulation.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38551,"byte_end":38577,"line_start":956,"line_end":956,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38582,"byte_end":38585,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38590,"byte_end":38640,"line_start":958,"line_end":958,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38871,"byte_end":38875,"line_start":965,"line_end":965,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, S>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38785,"byte_end":38859,"line_start":964,"line_end":964,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39065,"byte_end":39073,"line_start":972,"line_end":972,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":38979,"byte_end":39053,"line_start":971,"line_end":971,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39266,"byte_end":39270,"line_start":979,"line_end":979,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, S>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39191,"byte_end":39254,"line_start":978,"line_end":978,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39451,"byte_end":39457,"line_start":986,"line_end":986,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, S>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39374,"byte_end":39439,"line_start":985,"line_end":985,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39676,"byte_end":39686,"line_start":994,"line_end":994,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, S>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the the values of the map,\n in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over mutable references to the the values of the map,","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39565,"byte_end":39641,"line_start":992,"line_end":992,"column_start":5,"column_end":81}},{"value":"/ in their order","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39646,"byte_end":39664,"line_start":993,"line_end":993,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39935,"byte_end":39947,"line_start":1003,"line_end":1003,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, S>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `key` exists in the map.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `key` exists in the map.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39808,"byte_end":39870,"line_start":1000,"line_end":1000,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39875,"byte_end":39878,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":39883,"byte_end":39923,"line_start":1002,"line_end":1002,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40233,"byte_end":40236,"line_start":1014,"line_end":1014,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored for `key`, if it is present,","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40076,"byte_end":40147,"line_start":1010,"line_end":1010,"column_start":5,"column_end":76}},{"value":"/ else `None`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40152,"byte_end":40168,"line_start":1011,"line_end":1011,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40173,"byte_end":40176,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40181,"byte_end":40221,"line_start":1013,"line_end":1013,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40424,"byte_end":40432,"line_start":1022,"line_end":1022,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexMap<K, V, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &K, &V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[{"value":"/ Return item index, key and value","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40376,"byte_end":40412,"line_start":1021,"line_end":1021,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40752,"byte_end":40759,"line_start":1034,"line_end":1034,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, S>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":40918,"byte_end":40930,"line_start":1041,"line_end":1041,"column_start":12,"column_end":24},"name":"get_full_mut","qualname":"<IndexMap<K, V, S>>::get_full_mut","value":"pub fn get_full_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, &K, &mut V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42230,"byte_end":42236,"line_start":1084,"line_end":1084,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":41909,"byte_end":41969,"line_start":1076,"line_end":1076,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":41974,"byte_end":41988,"line_start":1077,"line_end":1077,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":41993,"byte_end":41996,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(key)`, if you need to","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42001,"byte_end":42072,"line_start":1079,"line_end":1079,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove(key)`","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42077,"byte_end":42148,"line_start":1080,"line_end":1080,"column_start":5,"column_end":76}},{"value":"/ instead.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42153,"byte_end":42165,"line_start":1081,"line_end":1081,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42170,"byte_end":42173,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42178,"byte_end":42218,"line_start":1083,"line_end":1083,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42781,"byte_end":42792,"line_start":1101,"line_end":1101,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42371,"byte_end":42431,"line_start":1091,"line_end":1091,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42436,"byte_end":42450,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42455,"byte_end":42458,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42463,"byte_end":42535,"line_start":1094,"line_end":1094,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42540,"byte_end":42603,"line_start":1095,"line_end":1095,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42608,"byte_end":42662,"line_start":1096,"line_end":1096,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42667,"byte_end":42670,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42675,"byte_end":42716,"line_start":1098,"line_end":1098,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42721,"byte_end":42724,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42729,"byte_end":42769,"line_start":1100,"line_end":1100,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43367,"byte_end":43383,"line_start":1118,"line_end":1118,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexMap<K, V, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":42943,"byte_end":43010,"line_start":1108,"line_end":1108,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43015,"byte_end":43036,"line_start":1109,"line_end":1109,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43041,"byte_end":43044,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43049,"byte_end":43121,"line_start":1111,"line_end":1111,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43126,"byte_end":43189,"line_start":1112,"line_end":1112,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43194,"byte_end":43248,"line_start":1113,"line_end":1113,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43253,"byte_end":43256,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43261,"byte_end":43302,"line_start":1115,"line_end":1115,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43307,"byte_end":43310,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43315,"byte_end":43355,"line_start":1117,"line_end":1117,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44119,"byte_end":44131,"line_start":1140,"line_end":1140,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexMap<K, V, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43714,"byte_end":43774,"line_start":1130,"line_end":1130,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43779,"byte_end":43793,"line_start":1131,"line_end":1131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43798,"byte_end":43801,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43806,"byte_end":43872,"line_start":1133,"line_end":1133,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43877,"byte_end":43938,"line_start":1134,"line_end":1134,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":43943,"byte_end":44000,"line_start":1135,"line_end":1135,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44005,"byte_end":44008,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44013,"byte_end":44054,"line_start":1137,"line_end":1137,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44059,"byte_end":44062,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44067,"byte_end":44107,"line_start":1139,"line_end":1139,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44702,"byte_end":44719,"line_start":1157,"line_end":1157,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexMap<K, V, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44283,"byte_end":44350,"line_start":1147,"line_end":1147,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44355,"byte_end":44376,"line_start":1148,"line_end":1148,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44381,"byte_end":44384,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44389,"byte_end":44455,"line_start":1150,"line_end":1150,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44460,"byte_end":44521,"line_start":1151,"line_end":1151,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44526,"byte_end":44583,"line_start":1152,"line_end":1152,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44588,"byte_end":44591,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44596,"byte_end":44637,"line_start":1154,"line_end":1154,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44642,"byte_end":44645,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":44650,"byte_end":44690,"line_start":1156,"line_end":1156,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":45150,"byte_end":45153,"line_start":1172,"line_end":1172,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexMap<K, V, S>>::pop","value":"pub fn pop(&mut Self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last key-value pair","sig":null,"attributes":[{"value":"/ Remove the last key-value pair","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":45051,"byte_end":45085,"line_start":1169,"line_end":1169,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":45090,"byte_end":45093,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":45098,"byte_end":45138,"line_start":1171,"line_end":1171,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":45501,"byte_end":45507,"line_start":1183,"line_end":1183,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexMap<K, V, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":45225,"byte_end":45297,"line_start":1176,"line_end":1176,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":45302,"byte_end":45336,"line_start":1177,"line_end":1177,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":45341,"byte_end":45344,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":45349,"byte_end":45421,"line_start":1179,"line_end":1179,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":45426,"byte_end":45436,"line_start":1180,"line_end":1180,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":45441,"byte_end":45444,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":45449,"byte_end":45489,"line_start":1182,"line_end":1182,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46139,"byte_end":46148,"line_start":1208,"line_end":1208,"column_start":12,"column_end":21},"name":"sort_keys","qualname":"<IndexMap<K, V, S>>::sort_keys","value":"pub fn sort_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs by the default ordering of the keys.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs by the default ordering of the keys.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46011,"byte_end":46084,"line_start":1205,"line_end":1205,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46089,"byte_end":46092,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46097,"byte_end":46127,"line_start":1207,"line_end":1207,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46657,"byte_end":46664,"line_start":1223,"line_end":1223,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexMap<K, V, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&K, &V, &K, &V) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place using the comparison\n function `compare`.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs in place using the comparison","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46238,"byte_end":46304,"line_start":1215,"line_end":1215,"column_start":5,"column_end":69}},{"value":"/ function `compare`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46309,"byte_end":46332,"line_start":1216,"line_end":1216,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46337,"byte_end":46340,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46345,"byte_end":46421,"line_start":1218,"line_end":1218,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46426,"byte_end":46489,"line_start":1219,"line_end":1219,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46494,"byte_end":46497,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n + c)** time and **O(n)** space where *n* is","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46502,"byte_end":46573,"line_start":1221,"line_end":1221,"column_start":5,"column_end":76}},{"value":"/ the length of the map and *c* the capacity. The sort is stable.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46578,"byte_end":46645,"line_start":1222,"line_end":1222,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46965,"byte_end":46974,"line_start":1234,"line_end":1234,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexMap<K, V, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<K, V> where F: FnMut(&K, &V, &K, &V)\n-> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map and return a by value iterator of","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46799,"byte_end":46872,"line_start":1230,"line_end":1230,"column_start":5,"column_end":78}},{"value":"/ the key-value pairs with the result.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46877,"byte_end":46917,"line_start":1231,"line_end":1231,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46922,"byte_end":46925,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":46930,"byte_end":46953,"line_start":1233,"line_end":1233,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47365,"byte_end":47370,"line_start":1246,"line_end":1246,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexMap<K, V, S>>::drain","value":"pub fn drain(&mut Self, RangeFull) -> Drain<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexMap`, returning all key-value pairs as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[{"value":"/ Clears the `IndexMap`, returning all key-value pairs as a drain iterator.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47230,"byte_end":47307,"line_start":1244,"line_end":1244,"column_start":5,"column_end":82}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47312,"byte_end":47353,"line_start":1245,"line_end":1245,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47831,"byte_end":47840,"line_start":1268,"line_end":1268,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexMap<K, V, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47683,"byte_end":47716,"line_start":1263,"line_end":1263,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47721,"byte_end":47724,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47729,"byte_end":47776,"line_start":1265,"line_end":1265,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47781,"byte_end":47784,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47789,"byte_end":47819,"line_start":1267,"line_end":1267,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48098,"byte_end":48111,"line_start":1277,"line_end":1277,"column_start":12,"column_end":25},"name":"get_index_mut","qualname":"<IndexMap<K, V, S>>::get_index_mut","value":"pub fn get_index_mut(&mut Self, usize) -> Option<(&mut K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47950,"byte_end":47983,"line_start":1272,"line_end":1272,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47988,"byte_end":47991,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47996,"byte_end":48043,"line_start":1274,"line_end":1274,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48048,"byte_end":48051,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48056,"byte_end":48086,"line_start":1276,"line_end":1276,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48612,"byte_end":48629,"line_start":1290,"line_end":1290,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexMap<K, V, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48237,"byte_end":48275,"line_start":1281,"line_end":1281,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48280,"byte_end":48283,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48288,"byte_end":48335,"line_start":1283,"line_end":1283,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48340,"byte_end":48343,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48348,"byte_end":48420,"line_start":1285,"line_end":1285,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48425,"byte_end":48488,"line_start":1286,"line_end":1286,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48493,"byte_end":48547,"line_start":1287,"line_end":1287,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48552,"byte_end":48555,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48560,"byte_end":48600,"line_start":1289,"line_end":1289,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49350,"byte_end":49368,"line_start":1312,"line_end":1312,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexMap<K, V, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":48980,"byte_end":49018,"line_start":1303,"line_end":1303,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49023,"byte_end":49026,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49031,"byte_end":49078,"line_start":1305,"line_end":1305,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49083,"byte_end":49086,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49091,"byte_end":49157,"line_start":1307,"line_end":1307,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49162,"byte_end":49223,"line_start":1308,"line_end":1308,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49228,"byte_end":49285,"line_start":1309,"line_end":1309,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49290,"byte_end":49293,"line_start":1310,"line_end":1310,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49298,"byte_end":49338,"line_start":1311,"line_end":1311,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":451},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":67843,"byte_end":67847,"line_start":1818,"line_end":1818,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":455}],"decl_id":null,"docs":" An iterator over the keys of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `IndexMap`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":67586,"byte_end":67632,"line_start":1811,"line_end":1811,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":67633,"byte_end":67636,"line_start":1812,"line_end":1812,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":67637,"byte_end":67713,"line_start":1813,"line_end":1813,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":67714,"byte_end":67741,"line_start":1814,"line_end":1814,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":67742,"byte_end":67745,"line_start":1815,"line_end":1815,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.IndexMap.html#method.keys","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":67746,"byte_end":67792,"line_start":1816,"line_end":1816,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":67793,"byte_end":67831,"line_start":1817,"line_end":1817,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":481},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68966,"byte_end":68972,"line_start":1862,"line_end":1862,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":485}],"decl_id":null,"docs":" An iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68701,"byte_end":68749,"line_start":1855,"line_end":1855,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68750,"byte_end":68753,"line_start":1856,"line_end":1856,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68754,"byte_end":68832,"line_start":1857,"line_end":1857,"column_start":1,"column_end":79}},{"value":"/ documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68833,"byte_end":68860,"line_start":1858,"line_end":1858,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68861,"byte_end":68864,"line_start":1859,"line_end":1859,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.IndexMap.html#method.values","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68865,"byte_end":68915,"line_start":1860,"line_end":1860,"column_start":1,"column_end":51}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68916,"byte_end":68954,"line_start":1861,"line_end":1861,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70122,"byte_end":70131,"line_start":1906,"line_end":1906,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":515}],"decl_id":null,"docs":" A mutable iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69838,"byte_end":69893,"line_start":1899,"line_end":1899,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69894,"byte_end":69897,"line_start":1900,"line_end":1900,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69898,"byte_end":69980,"line_start":1901,"line_end":1901,"column_start":1,"column_end":83}},{"value":"/ documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69981,"byte_end":70008,"line_start":1902,"line_end":1902,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70009,"byte_end":70012,"line_start":1903,"line_end":1903,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.IndexMap.html#method.values_mut","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70013,"byte_end":70071,"line_start":1904,"line_end":1904,"column_start":1,"column_end":59}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70072,"byte_end":70110,"line_start":1905,"line_end":1905,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":531},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70876,"byte_end":70880,"line_start":1935,"line_end":1935,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":535}],"decl_id":null,"docs":" An iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70616,"byte_end":70665,"line_start":1928,"line_end":1928,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70666,"byte_end":70669,"line_start":1929,"line_end":1929,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70670,"byte_end":70746,"line_start":1930,"line_end":1930,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70747,"byte_end":70774,"line_start":1931,"line_end":1931,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70775,"byte_end":70778,"line_start":1932,"line_end":1932,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.IndexMap.html#method.iter","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70779,"byte_end":70825,"line_start":1933,"line_end":1933,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70826,"byte_end":70864,"line_start":1934,"line_end":1934,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":561},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72022,"byte_end":72029,"line_start":1979,"line_end":1979,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":565}],"decl_id":null,"docs":" A mutable iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71743,"byte_end":71799,"line_start":1972,"line_end":1972,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71800,"byte_end":71803,"line_start":1973,"line_end":1973,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71804,"byte_end":71884,"line_start":1974,"line_end":1974,"column_start":1,"column_end":81}},{"value":"/ documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71885,"byte_end":71912,"line_start":1975,"line_end":1975,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71913,"byte_end":71916,"line_start":1976,"line_end":1976,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.IndexMap.html#method.iter_mut","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71917,"byte_end":71971,"line_start":1977,"line_end":1977,"column_start":1,"column_end":55}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71972,"byte_end":72010,"line_start":1978,"line_end":1978,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":581},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72834,"byte_end":72842,"line_start":2008,"line_end":2008,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":584}],"decl_id":null,"docs":" An owning iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72513,"byte_end":72569,"line_start":2001,"line_end":2001,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72570,"byte_end":72573,"line_start":2002,"line_end":2002,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexMap`]","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72574,"byte_end":72646,"line_start":2003,"line_end":2003,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72647,"byte_end":72722,"line_start":2004,"line_end":2004,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72723,"byte_end":72726,"line_start":2005,"line_end":2005,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.IndexMap.html#method.into_iter","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72727,"byte_end":72783,"line_start":2006,"line_end":2006,"column_start":1,"column_end":57}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72784,"byte_end":72822,"line_start":2007,"line_end":2007,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":602},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73813,"byte_end":73818,"line_start":2044,"line_end":2044,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":606}],"decl_id":null,"docs":" A draining iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73542,"byte_end":73599,"line_start":2037,"line_end":2037,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73600,"byte_end":73603,"line_start":2038,"line_end":2038,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73604,"byte_end":73681,"line_start":2039,"line_end":2039,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73682,"byte_end":73709,"line_start":2040,"line_end":2040,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73710,"byte_end":73713,"line_start":2041,"line_end":2041,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.IndexMap.html#method.drain","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73714,"byte_end":73762,"line_start":2042,"line_end":2042,"column_start":1,"column_end":49}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73763,"byte_end":73801,"line_start":2043,"line_end":2043,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":699},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":1229},{"krate":0,"index":1233},{"krate":0,"index":757},{"krate":0,"index":766},{"krate":0,"index":770},{"krate":0,"index":774},{"krate":0,"index":783},{"krate":0,"index":847},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":875},{"krate":0,"index":879},{"krate":0,"index":883},{"krate":0,"index":887},{"krate":0,"index":891},{"krate":0,"index":895},{"krate":0,"index":899},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":913},{"krate":0,"index":919},{"krate":0,"index":925},{"krate":0,"index":931},{"krate":0,"index":937},{"krate":0,"index":941},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":961},{"krate":0,"index":967},{"krate":0,"index":974},{"krate":0,"index":979},{"krate":0,"index":984},{"krate":0,"index":989},{"krate":0,"index":995},{"krate":0,"index":1002},{"krate":0,"index":1007},{"krate":0,"index":1012},{"krate":0,"index":1017},{"krate":0,"index":1023},{"krate":0,"index":1034},{"krate":0,"index":1040},{"krate":0,"index":1046},{"krate":0,"index":1052},{"krate":0,"index":1057},{"krate":0,"index":1067},{"krate":0,"index":1072},{"krate":0,"index":1077},{"krate":0,"index":1082},{"krate":0,"index":1090},{"krate":0,"index":1098},{"krate":0,"index":1106}],"decl_id":null,"docs":" A hash set implemented using `IndexMap`\n","sig":null,"attributes":[{"value":"/ A hash set implemented using `IndexMap`","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":87965,"byte_end":88008,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1229},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":90089,"byte_end":90097,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::set::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":1232}],"decl_id":null,"docs":" A hash set where the iteration order of the values is independent of their\n hash values.","sig":null,"attributes":[{"value":"/ A hash set where the iteration order of the values is independent of their","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":88466,"byte_end":88544,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ hash values.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":88545,"byte_end":88561,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":88562,"byte_end":88565,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashSet`, but also","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":88566,"byte_end":88643,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":88644,"byte_end":88672,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":88673,"byte_end":88676,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":88677,"byte_end":88688,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":88689,"byte_end":88692,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The values have a consistent order that is determined by the sequence of","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":88693,"byte_end":88769,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ insertion and removal calls on the set. The order does not depend on the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":88770,"byte_end":88846,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ values or the hash function at all. Note that insertion order and value","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":88847,"byte_end":88922,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ are not affected if a re-insertion is attempted once an element is","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":88923,"byte_end":88993,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/ already present.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":88994,"byte_end":89014,"line_start":37,"line_end":37,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89015,"byte_end":89018,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the set *in order*.  Set operation iterators like","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89019,"byte_end":89095,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ `union` produce a concatenated order, as do their matching \"bitwise\"","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89096,"byte_end":89168,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ operators.  See their documentation for specifics.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89169,"byte_end":89223,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89224,"byte_end":89227,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89228,"byte_end":89302,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89303,"byte_end":89379,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89380,"byte_end":89445,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89446,"byte_end":89449,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89450,"byte_end":89463,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89464,"byte_end":89467,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The values are indexed in a compact range without holes in the range","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89468,"byte_end":89540,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/ `0..self.len()`. For example, the method `.get_full` looks up the index for","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89541,"byte_end":89620,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ a value, and the method `.get_index` looks up the value by index.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89621,"byte_end":89690,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89691,"byte_end":89694,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89695,"byte_end":89709,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89710,"byte_end":89713,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89714,"byte_end":89721,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexSet;","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89722,"byte_end":89749,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89750,"byte_end":89753,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Collects which letters appear in a sentence.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89754,"byte_end":89805,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/ let letters: IndexSet<_> = \"a short treatise on fungi\".chars().collect();","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89806,"byte_end":89883,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89884,"byte_end":89887,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(letters.contains(&'s'));","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89888,"byte_end":89924,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'t'));","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89925,"byte_end":89961,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'u'));","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89962,"byte_end":89998,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ assert!(!letters.contains(&'y'));","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":89999,"byte_end":90036,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":90037,"byte_end":90044,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":90062,"byte_end":90077,"line_start":67,"line_end":67,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91254,"byte_end":91257,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new set. (Does not allocate.)","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91200,"byte_end":91242,"line_start":117,"line_end":117,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91495,"byte_end":91508,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexSet<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91344,"byte_end":91396,"line_start":124,"line_end":124,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91401,"byte_end":91440,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91445,"byte_end":91448,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91453,"byte_end":91483,"line_start":127,"line_end":127,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91795,"byte_end":91819,"line_start":140,"line_end":140,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexSet<T, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91644,"byte_end":91696,"line_start":136,"line_end":136,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91701,"byte_end":91740,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91745,"byte_end":91748,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91753,"byte_end":91783,"line_start":139,"line_end":139,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92105,"byte_end":92108,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements in the set.","sig":null,"attributes":[{"value":"/ Return the number of elements in the set.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92005,"byte_end":92050,"line_start":149,"line_end":149,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92055,"byte_end":92058,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92063,"byte_end":92093,"line_start":151,"line_end":151,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92265,"byte_end":92273,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the set contains no elements.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92161,"byte_end":92210,"line_start":156,"line_end":156,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92215,"byte_end":92218,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92223,"byte_end":92253,"line_start":158,"line_end":158,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92382,"byte_end":92393,"line_start":164,"line_end":164,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexSet<T, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new set with `hash_builder`","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92330,"byte_end":92370,"line_start":163,"line_end":163,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92615,"byte_end":92621,"line_start":174,"line_end":174,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexSet<T, S>>::hasher","value":"pub fn hasher(&Self) -> &S where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the set's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the set's `BuildHasher`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92553,"byte_end":92603,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92754,"byte_end":92762,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92712,"byte_end":92742,"line_start":181,"line_end":181,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93015,"byte_end":93020,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements in the set, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all elements in the set, while preserving its capacity.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92894,"byte_end":92960,"line_start":192,"line_end":192,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92965,"byte_end":92968,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92973,"byte_end":93003,"line_start":194,"line_end":194,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93118,"byte_end":93125,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexSet<T, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" FIXME Not implemented fully yet\n","sig":null,"attributes":[{"value":"/ FIXME Not implemented fully yet","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93071,"byte_end":93106,"line_start":199,"line_end":199,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93559,"byte_end":93565,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, S>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set.","sig":null,"attributes":[{"value":"/ Insert the value into the set.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93207,"byte_end":93241,"line_start":204,"line_end":204,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93246,"byte_end":93249,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93254,"byte_end":93317,"line_start":206,"line_end":206,"column_start":5,"column_end":68}},{"value":"/ `false` leaving the original value in the set and without","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93322,"byte_end":93383,"line_start":207,"line_end":207,"column_start":5,"column_end":66}},{"value":"/ altering its insertion order. Otherwise, it inserts the new","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93388,"byte_end":93451,"line_start":208,"line_end":208,"column_start":5,"column_end":68}},{"value":"/ item and returns `true`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93456,"byte_end":93484,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93489,"byte_end":93492,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93497,"byte_end":93547,"line_start":211,"line_end":211,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94103,"byte_end":94114,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexSet<T, S>>::insert_full","value":"pub fn insert_full(&mut Self, T) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set, and get its index.","sig":null,"attributes":[{"value":"/ Insert the value into the set, and get its index.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93653,"byte_end":93706,"line_start":216,"line_end":216,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93711,"byte_end":93714,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93719,"byte_end":93782,"line_start":218,"line_end":218,"column_start":5,"column_end":68}},{"value":"/ the index of the existing item and `false`, leaving the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93787,"byte_end":93846,"line_start":219,"line_end":219,"column_start":5,"column_end":64}},{"value":"/ original value in the set and without altering its insertion","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93851,"byte_end":93915,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/ order. Otherwise, it inserts the new item and returns the index","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93920,"byte_end":93987,"line_start":221,"line_end":221,"column_start":5,"column_end":72}},{"value":"/ of the inserted item and `true`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":93992,"byte_end":94028,"line_start":222,"line_end":222,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94033,"byte_end":94036,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94041,"byte_end":94091,"line_start":224,"line_end":224,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94513,"byte_end":94517,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, S>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the set, in their order","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94436,"byte_end":94501,"line_start":238,"line_end":238,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94782,"byte_end":94792,"line_start":248,"line_end":248,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, S>>::difference","value":"pub fn difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Difference where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` but not `other`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94614,"byte_end":94688,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94693,"byte_end":94696,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94701,"byte_end":94770,"line_start":247,"line_end":247,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95241,"byte_end":95261,"line_start":263,"line_end":263,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, S>>::symmetric_difference","value":"pub fn symmetric_difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>)\n-> SymmetricDifference where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` or `other`,","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":94997,"byte_end":95066,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ but not in both.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95071,"byte_end":95091,"line_start":259,"line_end":259,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95096,"byte_end":95099,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95104,"byte_end":95176,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/ values from `other` in their original order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95181,"byte_end":95229,"line_start":262,"line_end":262,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95701,"byte_end":95713,"line_start":278,"line_end":278,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, S>>::intersection","value":"pub fn intersection<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Intersection\nwhere S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in both `self` and `other`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95532,"byte_end":95607,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95612,"byte_end":95615,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95620,"byte_end":95689,"line_start":277,"line_end":277,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96155,"byte_end":96160,"line_start":292,"line_end":292,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, S>>::union","value":"pub fn union<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Union where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all values that are in `self` or `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over all values that are in `self` or `other`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95922,"byte_end":95991,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":95996,"byte_end":95999,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96004,"byte_end":96076,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ values that are unique to `other` in their original order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96081,"byte_end":96143,"line_start":291,"line_end":291,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96494,"byte_end":96502,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, S>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `value` exists in the set.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `value` exists in the set.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96365,"byte_end":96429,"line_start":301,"line_end":301,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96434,"byte_end":96437,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96442,"byte_end":96482,"line_start":303,"line_end":303,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96795,"byte_end":96798,"line_start":315,"line_end":315,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexSet<T, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored in the set, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored in the set, if it is present,","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96637,"byte_end":96709,"line_start":311,"line_end":311,"column_start":5,"column_end":77}},{"value":"/ else `None`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96714,"byte_end":96730,"line_start":312,"line_end":312,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96735,"byte_end":96738,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96743,"byte_end":96783,"line_start":314,"line_end":314,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96999,"byte_end":97007,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexSet<T, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &T)> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index and value\n","sig":null,"attributes":[{"value":"/ Return item index and value","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":96956,"byte_end":96987,"line_start":322,"line_end":322,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97378,"byte_end":97385,"line_start":334,"line_end":334,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexSet<T, S>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97179,"byte_end":97253,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ equal to the given one. Returns the replaced value.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97258,"byte_end":97313,"line_start":331,"line_end":331,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97318,"byte_end":97321,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97326,"byte_end":97366,"line_start":333,"line_end":333,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97961,"byte_end":97967,"line_start":352,"line_end":352,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97658,"byte_end":97729,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97734,"byte_end":97737,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(value)`, if you want","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97742,"byte_end":97812,"line_start":348,"line_end":348,"column_start":5,"column_end":75}},{"value":"/ to preserve the order of the values in the set, use `.shift_remove(value)`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97817,"byte_end":97896,"line_start":349,"line_end":349,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97901,"byte_end":97904,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":97909,"byte_end":97949,"line_start":351,"line_end":351,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98512,"byte_end":98523,"line_start":368,"line_end":368,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexSet<T, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98101,"byte_end":98172,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98177,"byte_end":98180,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98185,"byte_end":98258,"line_start":361,"line_end":361,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98263,"byte_end":98326,"line_start":362,"line_end":362,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98331,"byte_end":98385,"line_start":363,"line_end":363,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98390,"byte_end":98393,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98398,"byte_end":98447,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98452,"byte_end":98455,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98460,"byte_end":98500,"line_start":367,"line_end":367,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99077,"byte_end":99089,"line_start":384,"line_end":384,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexSet<T, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98671,"byte_end":98742,"line_start":375,"line_end":375,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98747,"byte_end":98750,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98755,"byte_end":98822,"line_start":377,"line_end":377,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98827,"byte_end":98888,"line_start":378,"line_end":378,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98893,"byte_end":98950,"line_start":379,"line_end":379,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98955,"byte_end":98958,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":98963,"byte_end":99012,"line_start":381,"line_end":381,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99017,"byte_end":99020,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99025,"byte_end":99065,"line_start":383,"line_end":383,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99575,"byte_end":99579,"line_start":399,"line_end":399,"column_start":12,"column_end":16},"name":"take","qualname":"<IndexSet<T, S>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99238,"byte_end":99312,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99317,"byte_end":99331,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99336,"byte_end":99339,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_take(value)`, if you need to","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99344,"byte_end":99415,"line_start":394,"line_end":394,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the values in the set, use `.shift_take(value)`","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99420,"byte_end":99493,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ instead.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99498,"byte_end":99510,"line_start":396,"line_end":396,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99515,"byte_end":99518,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99523,"byte_end":99563,"line_start":398,"line_end":398,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100148,"byte_end":100157,"line_start":416,"line_end":416,"column_start":12,"column_end":21},"name":"swap_take","qualname":"<IndexSet<T, S>>::swap_take","value":"pub fn swap_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99716,"byte_end":99790,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99795,"byte_end":99809,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99814,"byte_end":99817,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99822,"byte_end":99895,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99900,"byte_end":99963,"line_start":410,"line_end":410,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":99968,"byte_end":100022,"line_start":411,"line_end":411,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100027,"byte_end":100030,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100035,"byte_end":100083,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100088,"byte_end":100091,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100096,"byte_end":100136,"line_start":415,"line_end":415,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100752,"byte_end":100762,"line_start":433,"line_end":433,"column_start":12,"column_end":22},"name":"shift_take","qualname":"<IndexSet<T, S>>::shift_take","value":"pub fn shift_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100325,"byte_end":100399,"line_start":423,"line_end":423,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100404,"byte_end":100418,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100423,"byte_end":100426,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100431,"byte_end":100498,"line_start":426,"line_end":426,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100503,"byte_end":100564,"line_start":427,"line_end":427,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100569,"byte_end":100626,"line_start":428,"line_end":428,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100631,"byte_end":100634,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100639,"byte_end":100687,"line_start":430,"line_end":430,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100692,"byte_end":100695,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100700,"byte_end":100740,"line_start":432,"line_end":432,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101282,"byte_end":101298,"line_start":447,"line_end":447,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexSet<T, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":100931,"byte_end":100996,"line_start":440,"line_end":440,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101001,"byte_end":101004,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101009,"byte_end":101082,"line_start":442,"line_end":442,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101087,"byte_end":101150,"line_start":443,"line_end":443,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101155,"byte_end":101209,"line_start":444,"line_end":444,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101214,"byte_end":101217,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101222,"byte_end":101270,"line_start":446,"line_end":446,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101826,"byte_end":101843,"line_start":461,"line_end":461,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexSet<T, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101480,"byte_end":101545,"line_start":454,"line_end":454,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101550,"byte_end":101553,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101558,"byte_end":101625,"line_start":456,"line_end":456,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101630,"byte_end":101691,"line_start":457,"line_end":457,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101696,"byte_end":101753,"line_start":458,"line_end":458,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101758,"byte_end":101761,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":101766,"byte_end":101814,"line_start":460,"line_end":460,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102116,"byte_end":102119,"line_start":471,"line_end":471,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexSet<T, S>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last value","sig":null,"attributes":[{"value":"/ Remove the last value","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102026,"byte_end":102051,"line_start":468,"line_end":468,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102056,"byte_end":102059,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102064,"byte_end":102104,"line_start":470,"line_end":470,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102464,"byte_end":102470,"line_start":482,"line_end":482,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexSet<T, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each value in the set and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each value in the set and keep those where the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102197,"byte_end":102260,"line_start":475,"line_end":475,"column_start":5,"column_end":68}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102265,"byte_end":102299,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102304,"byte_end":102307,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102312,"byte_end":102384,"line_start":478,"line_end":478,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102389,"byte_end":102399,"line_start":479,"line_end":479,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102404,"byte_end":102407,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102412,"byte_end":102452,"line_start":481,"line_end":481,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102715,"byte_end":102719,"line_start":492,"line_end":492,"column_start":12,"column_end":16},"name":"sort","qualname":"<IndexSet<T, S>>::sort","value":"pub fn sort(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values by their default ordering.","sig":null,"attributes":[{"value":"/ Sort the set’s values by their default ordering.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102606,"byte_end":102660,"line_start":489,"line_end":489,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102665,"byte_end":102668,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102673,"byte_end":102703,"line_start":491,"line_end":491,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102980,"byte_end":102987,"line_start":502,"line_end":502,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexSet<T, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place using the comparison function `compare`.","sig":null,"attributes":[{"value":"/ Sort the set’s values in place using the comparison function `compare`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102803,"byte_end":102880,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102885,"byte_end":102888,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n)** time and **O(n)** space. The sort is stable.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":102893,"byte_end":102968,"line_start":501,"line_end":501,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103290,"byte_end":103299,"line_start":513,"line_end":513,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexSet<T, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<T> where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by value iterator of\n the values with the result.","sig":null,"attributes":[{"value":"/ Sort the values of the set and return a by value iterator of","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103142,"byte_end":103206,"line_start":509,"line_end":509,"column_start":5,"column_end":69}},{"value":"/ the values with the result.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103211,"byte_end":103242,"line_start":510,"line_end":510,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103247,"byte_end":103250,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103255,"byte_end":103278,"line_start":512,"line_end":512,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103632,"byte_end":103637,"line_start":524,"line_end":524,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexSet<T, S>>::drain","value":"pub fn drain(&mut Self, RangeFull) -> Drain<, T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexSet`, returning all values as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[{"value":"/ Clears the `IndexSet`, returning all values as a drain iterator.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103506,"byte_end":103574,"line_start":522,"line_end":522,"column_start":5,"column_end":73}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103579,"byte_end":103620,"line_start":523,"line_end":523,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103933,"byte_end":103942,"line_start":537,"line_end":537,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexSet<T, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value by index","sig":null,"attributes":[{"value":"/ Get a value by index","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103794,"byte_end":103818,"line_start":532,"line_end":532,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103823,"byte_end":103826,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103831,"byte_end":103878,"line_start":534,"line_end":534,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103883,"byte_end":103886,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103891,"byte_end":103921,"line_start":536,"line_end":536,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104419,"byte_end":104436,"line_start":550,"line_end":550,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexSet<T, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104043,"byte_end":104081,"line_start":541,"line_end":541,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104086,"byte_end":104089,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104094,"byte_end":104141,"line_start":543,"line_end":543,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104146,"byte_end":104149,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104154,"byte_end":104227,"line_start":545,"line_end":545,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104232,"byte_end":104295,"line_start":546,"line_end":546,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104300,"byte_end":104354,"line_start":547,"line_end":547,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104359,"byte_end":104362,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104367,"byte_end":104407,"line_start":549,"line_end":549,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104918,"byte_end":104936,"line_start":563,"line_end":563,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexSet<T, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104547,"byte_end":104585,"line_start":554,"line_end":554,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104590,"byte_end":104593,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104598,"byte_end":104645,"line_start":556,"line_end":556,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104650,"byte_end":104653,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104658,"byte_end":104725,"line_start":558,"line_end":558,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104730,"byte_end":104791,"line_start":559,"line_end":559,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104796,"byte_end":104853,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104858,"byte_end":104861,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":104866,"byte_end":104906,"line_start":562,"line_end":562,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":856},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105365,"byte_end":105373,"line_start":575,"line_end":575,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":858}],"decl_id":null,"docs":" An owning iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105046,"byte_end":105100,"line_start":568,"line_end":568,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105101,"byte_end":105104,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexSet`]","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105105,"byte_end":105177,"line_start":570,"line_end":570,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105178,"byte_end":105253,"line_start":571,"line_end":571,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105254,"byte_end":105257,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105258,"byte_end":105296,"line_start":573,"line_end":573,"column_start":1,"column_end":39}},{"value":"/ [`into_iter`]: struct.IndexSet.html#method.into_iter","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105297,"byte_end":105353,"line_start":574,"line_end":574,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":871},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106262,"byte_end":106266,"line_start":611,"line_end":611,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":874}],"decl_id":null,"docs":" An iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106004,"byte_end":106051,"line_start":604,"line_end":604,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106052,"byte_end":106055,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexSet`].","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106056,"byte_end":106124,"line_start":606,"line_end":606,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106125,"byte_end":106160,"line_start":607,"line_end":607,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106161,"byte_end":106164,"line_start":608,"line_end":608,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106165,"byte_end":106203,"line_start":609,"line_end":609,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.IndexSet.html#method.iter","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106204,"byte_end":106250,"line_start":610,"line_end":610,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":895},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107280,"byte_end":107285,"line_start":654,"line_end":654,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":898}],"decl_id":null,"docs":" A draining iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107011,"byte_end":107066,"line_start":647,"line_end":647,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107067,"byte_end":107070,"line_start":648,"line_end":648,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexSet`].","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107071,"byte_end":107140,"line_start":649,"line_end":649,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107141,"byte_end":107176,"line_start":650,"line_end":650,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107177,"byte_end":107180,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107181,"byte_end":107219,"line_start":652,"line_end":652,"column_start":1,"column_end":39}},{"value":"/ [`drain`]: struct.IndexSet.html#method.drain","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107220,"byte_end":107268,"line_start":653,"line_end":653,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109597,"byte_end":109608,"line_start":767,"line_end":767,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, S>>::is_disjoint","value":"pub fn is_disjoint<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109517,"byte_end":109585,"line_start":766,"line_end":766,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109983,"byte_end":109992,"line_start":779,"line_end":779,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, S>>::is_subset","value":"pub fn is_subset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `self` are contained in `other`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109901,"byte_end":109971,"line_start":778,"line_end":778,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110260,"byte_end":110271,"line_start":787,"line_end":787,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, S>>::is_superset","value":"pub fn is_superset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `other` are contained in `self`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110178,"byte_end":110248,"line_start":786,"line_end":786,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":961},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110697,"byte_end":110707,"line_start":802,"line_end":802,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `IndexSet`s.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110396,"byte_end":110468,"line_start":795,"line_end":795,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110469,"byte_end":110472,"line_start":796,"line_end":796,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`IndexSet`].","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110473,"byte_end":110547,"line_start":797,"line_end":797,"column_start":1,"column_end":75}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110548,"byte_end":110583,"line_start":798,"line_end":798,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110584,"byte_end":110587,"line_start":799,"line_end":799,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110588,"byte_end":110626,"line_start":800,"line_end":800,"column_start":1,"column_end":39}},{"value":"/ [`difference`]: struct.IndexSet.html#method.difference","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110627,"byte_end":110685,"line_start":801,"line_end":801,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":989},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112276,"byte_end":112288,"line_start":869,"line_end":869,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `IndexSet`s.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111967,"byte_end":112041,"line_start":862,"line_end":862,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112042,"byte_end":112045,"line_start":863,"line_end":863,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`IndexSet`].","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112046,"byte_end":112122,"line_start":864,"line_end":864,"column_start":1,"column_end":77}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112123,"byte_end":112158,"line_start":865,"line_end":865,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112159,"byte_end":112162,"line_start":866,"line_end":866,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112163,"byte_end":112201,"line_start":867,"line_end":867,"column_start":1,"column_end":39}},{"value":"/ [`intersection`]: struct.IndexSet.html#method.intersection","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112202,"byte_end":112264,"line_start":868,"line_end":868,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113897,"byte_end":113916,"line_start":936,"line_end":936,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1022}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113556,"byte_end":113638,"line_start":929,"line_end":929,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113639,"byte_end":113642,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113643,"byte_end":113713,"line_start":931,"line_end":931,"column_start":1,"column_end":71}},{"value":"/ [`IndexSet`]. See its documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113714,"byte_end":113763,"line_start":932,"line_end":932,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113764,"byte_end":113767,"line_start":933,"line_end":933,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113768,"byte_end":113806,"line_start":934,"line_end":934,"column_start":1,"column_end":39}},{"value":"/ [`symmetric_difference`]: struct.IndexSet.html#method.symmetric_difference","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113807,"byte_end":113885,"line_start":935,"line_end":935,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115454,"byte_end":115459,"line_start":1001,"line_end":1001,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1056}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `IndexSet`s.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115173,"byte_end":115240,"line_start":994,"line_end":994,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115241,"byte_end":115244,"line_start":995,"line_end":995,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`IndexSet`].","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115245,"byte_end":115314,"line_start":996,"line_end":996,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115315,"byte_end":115350,"line_start":997,"line_end":997,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115351,"byte_end":115354,"line_start":998,"line_end":998,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115355,"byte_end":115393,"line_start":999,"line_end":999,"column_start":1,"column_end":39}},{"value":"/ [`union`]: struct.IndexSet.html#method.union","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115394,"byte_end":115442,"line_start":1000,"line_end":1000,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":4223,"byte_end":4228,"line_start":157,"line_end":157,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entries::Entry","value":"type Entry;","parent":{"krate":0,"index":1140},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8336,"byte_end":8337,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":10177,"byte_end":10185,"line_start":52,"line_end":52,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":12104,"byte_end":12113,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":12430,"byte_end":12439,"line_start":54,"line_end":54,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":12466,"byte_end":12475,"line_start":55,"line_end":55,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":12572,"byte_end":12581,"line_start":62,"line_end":62,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":12809,"byte_end":12818,"line_start":71,"line_end":71,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":13082,"byte_end":13091,"line_start":84,"line_end":84,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":14001,"byte_end":14004,"line_start":111,"line_end":111,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":14102,"byte_end":14105,"line_start":118,"line_end":118,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":14329,"byte_end":14332,"line_start":127,"line_end":127,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":16977,"byte_end":16991,"line_start":235,"line_end":235,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":19581,"byte_end":19589,"line_start":323,"line_end":323,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":20505,"byte_end":20513,"line_start":360,"line_end":360,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22156,"byte_end":22164,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22562,"byte_end":22570,"line_start":439,"line_end":439,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":24572,"byte_end":24584,"line_start":517,"line_end":517,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27027,"byte_end":27032,"line_start":602,"line_end":602,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28923,"byte_end":28928,"line_start":666,"line_end":666,"column_start":65,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":29491,"byte_end":29504,"line_start":686,"line_end":686,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32626,"byte_end":32639,"line_start":775,"line_end":775,"column_start":65,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33140,"byte_end":33151,"line_start":795,"line_end":795,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34104,"byte_end":34115,"line_start":830,"line_end":830,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34310,"byte_end":34318,"line_start":838,"line_end":838,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47659,"byte_end":47667,"line_start":1262,"line_end":1262,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49993,"byte_end":50005,"line_start":1332,"line_end":1332,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":67949,"byte_end":67953,"line_start":1822,"line_end":1822,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68072,"byte_end":68076,"line_start":1828,"line_end":1828,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68233,"byte_end":68237,"line_start":1834,"line_end":1834,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68392,"byte_end":68396,"line_start":1841,"line_end":1841,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68562,"byte_end":68566,"line_start":1849,"line_end":1849,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69063,"byte_end":69069,"line_start":1866,"line_end":1866,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69190,"byte_end":69196,"line_start":1872,"line_end":1872,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69360,"byte_end":69366,"line_start":1878,"line_end":1878,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69521,"byte_end":69527,"line_start":1885,"line_end":1885,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69697,"byte_end":69703,"line_start":1893,"line_end":1893,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70225,"byte_end":70234,"line_start":1910,"line_end":1910,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70359,"byte_end":70368,"line_start":1916,"line_end":1916,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70532,"byte_end":70541,"line_start":1922,"line_end":1922,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70971,"byte_end":70975,"line_start":1939,"line_end":1939,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71100,"byte_end":71104,"line_start":1945,"line_end":1945,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71263,"byte_end":71267,"line_start":1951,"line_end":1951,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71422,"byte_end":71426,"line_start":1958,"line_end":1958,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71604,"byte_end":71608,"line_start":1966,"line_end":1966,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72123,"byte_end":72130,"line_start":1983,"line_end":1983,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72262,"byte_end":72269,"line_start":1989,"line_end":1989,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72431,"byte_end":72438,"line_start":1995,"line_end":1995,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72926,"byte_end":72934,"line_start":2012,"line_end":2012,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73052,"byte_end":73060,"line_start":2018,"line_end":2018,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73216,"byte_end":73224,"line_start":2024,"line_end":2024,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73345,"byte_end":73353,"line_start":2030,"line_end":2030,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73948,"byte_end":73953,"line_start":2052,"line_end":2052,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74075,"byte_end":74080,"line_start":2058,"line_end":2058,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74683,"byte_end":74691,"line_start":2086,"line_end":2086,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75017,"byte_end":75025,"line_start":2102,"line_end":2102,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75596,"byte_end":75604,"line_start":2124,"line_end":2124,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75978,"byte_end":75986,"line_start":2140,"line_end":2140,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76570,"byte_end":76578,"line_start":2159,"line_end":2159,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77311,"byte_end":77319,"line_start":2180,"line_end":2180,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77715,"byte_end":77723,"line_start":2194,"line_end":2194,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77957,"byte_end":77965,"line_start":2204,"line_end":2204,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":78330,"byte_end":78338,"line_start":2221,"line_end":2221,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":90272,"byte_end":90280,"line_start":77,"line_end":77,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":90749,"byte_end":90757,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91182,"byte_end":91190,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91623,"byte_end":91631,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92829,"byte_end":92837,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103773,"byte_end":103781,"line_start":531,"line_end":531,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105439,"byte_end":105447,"line_start":579,"line_end":579,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105544,"byte_end":105552,"line_start":585,"line_end":585,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105696,"byte_end":105704,"line_start":591,"line_end":591,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105807,"byte_end":105815,"line_start":597,"line_end":597,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106346,"byte_end":106350,"line_start":615,"line_end":615,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106463,"byte_end":106467,"line_start":621,"line_end":621,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106623,"byte_end":106627,"line_start":627,"line_end":627,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106721,"byte_end":106725,"line_start":633,"line_end":633,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106875,"byte_end":106879,"line_start":641,"line_end":641,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107364,"byte_end":107369,"line_start":658,"line_end":658,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107474,"byte_end":107479,"line_start":664,"line_end":664,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107795,"byte_end":107803,"line_start":681,"line_end":681,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108066,"byte_end":108074,"line_start":696,"line_end":696,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108369,"byte_end":108377,"line_start":709,"line_end":709,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108628,"byte_end":108636,"line_start":720,"line_end":720,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108917,"byte_end":108925,"line_start":731,"line_end":731,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109155,"byte_end":109163,"line_start":743,"line_end":743,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109377,"byte_end":109385,"line_start":754,"line_end":754,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109452,"byte_end":109460,"line_start":761,"line_end":761,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":956},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110813,"byte_end":110823,"line_start":807,"line_end":807,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111261,"byte_end":111271,"line_start":828,"line_end":828,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111585,"byte_end":111595,"line_start":843,"line_end":843,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111765,"byte_end":111775,"line_start":852,"line_end":852,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112394,"byte_end":112406,"line_start":874,"line_end":874,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112843,"byte_end":112855,"line_start":895,"line_end":895,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113168,"byte_end":113180,"line_start":910,"line_end":910,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113352,"byte_end":113364,"line_start":919,"line_end":919,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114045,"byte_end":114064,"line_start":940,"line_end":940,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114523,"byte_end":114542,"line_start":964,"line_end":964,"column_start":45,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114747,"byte_end":114766,"line_start":975,"line_end":975,"column_start":31,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114935,"byte_end":114954,"line_start":983,"line_end":983,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115563,"byte_end":115568,"line_start":1005,"line_end":1005,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115995,"byte_end":116000,"line_start":1028,"line_end":1028,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116173,"byte_end":116178,"line_start":1038,"line_end":1038,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116323,"byte_end":116328,"line_start":1046,"line_end":1046,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3147,"byte_end":3156,"line_start":101,"line_end":101,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3248,"byte_end":3257,"line_start":108,"line_end":108,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3345,"byte_end":3354,"line_start":114,"line_end":114,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3556,"byte_end":3562,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2703,"byte_end":2706,"line_start":82,"line_end":82,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":68}},{"kind":"Mod","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":2716,"byte_end":2719,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":699}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/equivalent.rs","byte_start":8336,"byte_end":8337,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":16},"to":{"krate":0,"index":12}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/mutable_keys.rs","byte_start":10177,"byte_end":10185,"line_start":52,"line_end":52,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1158},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":12104,"byte_end":12113,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":12430,"byte_end":12439,"line_start":54,"line_end":54,"column_start":19,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1147},"to":{"krate":2,"index":3067}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":12466,"byte_end":12475,"line_start":55,"line_end":55,"column_start":20,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1147},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":12572,"byte_end":12581,"line_start":62,"line_end":62,"column_start":24,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1147},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":12809,"byte_end":12818,"line_start":71,"line_end":71,"column_start":35,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1147},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":13082,"byte_end":13091,"line_start":84,"line_end":84,"column_start":34,"column_end":43},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1259},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":14001,"byte_end":14004,"line_start":111,"line_end":111,"column_start":16,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1155},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":14102,"byte_end":14105,"line_start":118,"line_end":118,"column_start":21,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1155},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":14329,"byte_end":14332,"line_start":127,"line_end":127,"column_start":6,"column_end":9},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":16977,"byte_end":16991,"line_start":235,"line_end":235,"column_start":10,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":19581,"byte_end":19589,"line_start":323,"line_end":323,"column_start":27,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1158},"to":{"krate":0,"index":1140}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":20505,"byte_end":20513,"line_start":360,"line_end":360,"column_start":30,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22156,"byte_end":22164,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":22562,"byte_end":22570,"line_start":439,"line_end":439,"column_start":15,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":24572,"byte_end":24584,"line_start":517,"line_end":517,"column_start":12,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":27027,"byte_end":27032,"line_start":602,"line_end":602,"column_start":16,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":28923,"byte_end":28928,"line_start":666,"line_end":666,"column_start":65,"column_end":70},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":238},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":29491,"byte_end":29504,"line_start":686,"line_end":686,"column_start":16,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":32626,"byte_end":32639,"line_start":775,"line_end":775,"column_start":65,"column_end":78},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":265},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":33140,"byte_end":33151,"line_start":795,"line_end":795,"column_start":16,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34104,"byte_end":34115,"line_start":830,"line_end":830,"column_start":52,"column_end":63},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":295},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":34310,"byte_end":34318,"line_start":838,"line_end":838,"column_start":15,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":47659,"byte_end":47667,"line_start":1262,"line_end":1262,"column_start":15,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":49993,"byte_end":50005,"line_start":1332,"line_end":1332,"column_start":12,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":67949,"byte_end":67953,"line_start":1822,"line_end":1822,"column_start":29,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":451},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68072,"byte_end":68076,"line_start":1828,"line_end":1828,"column_start":40,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":451},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68233,"byte_end":68237,"line_start":1834,"line_end":1834,"column_start":38,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":451},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68392,"byte_end":68396,"line_start":1841,"line_end":1841,"column_start":26,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":451},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":68562,"byte_end":68566,"line_start":1849,"line_end":1849,"column_start":43,"column_end":47},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":451},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69063,"byte_end":69069,"line_start":1866,"line_end":1866,"column_start":29,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69190,"byte_end":69196,"line_start":1872,"line_end":1872,"column_start":40,"column_end":46},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69360,"byte_end":69366,"line_start":1878,"line_end":1878,"column_start":38,"column_end":44},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69521,"byte_end":69527,"line_start":1885,"line_end":1885,"column_start":26,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":69697,"byte_end":69703,"line_start":1893,"line_end":1893,"column_start":43,"column_end":49},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70225,"byte_end":70234,"line_start":1910,"line_end":1910,"column_start":29,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70359,"byte_end":70368,"line_start":1916,"line_end":1916,"column_start":40,"column_end":49},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70532,"byte_end":70541,"line_start":1922,"line_end":1922,"column_start":38,"column_end":47},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":70971,"byte_end":70975,"line_start":1939,"line_end":1939,"column_start":29,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":531},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71100,"byte_end":71104,"line_start":1945,"line_end":1945,"column_start":40,"column_end":44},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":531},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71263,"byte_end":71267,"line_start":1951,"line_end":1951,"column_start":38,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":531},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71422,"byte_end":71426,"line_start":1958,"line_end":1958,"column_start":26,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":531},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":71604,"byte_end":71608,"line_start":1966,"line_end":1966,"column_start":55,"column_end":59},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":531},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72123,"byte_end":72130,"line_start":1983,"line_end":1983,"column_start":29,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72262,"byte_end":72269,"line_start":1989,"line_end":1989,"column_start":40,"column_end":47},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72431,"byte_end":72438,"line_start":1995,"line_end":1995,"column_start":38,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":72926,"byte_end":72934,"line_start":2012,"line_end":2012,"column_start":25,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":581},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73052,"byte_end":73060,"line_start":2018,"line_end":2018,"column_start":40,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":581},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73216,"byte_end":73224,"line_start":2024,"line_end":2024,"column_start":34,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":581},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73345,"byte_end":73353,"line_start":2030,"line_end":2030,"column_start":51,"column_end":59},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":581},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":73948,"byte_end":73953,"line_start":2052,"line_end":2052,"column_start":29,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":602},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74075,"byte_end":74080,"line_start":2058,"line_end":2058,"column_start":40,"column_end":45},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":602},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":74683,"byte_end":74691,"line_start":2086,"line_end":2086,"column_start":32,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":7783}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75017,"byte_end":75025,"line_start":2102,"line_end":2102,"column_start":47,"column_end":55},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75596,"byte_end":75604,"line_start":2124,"line_end":2124,"column_start":50,"column_end":58},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":3365}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":75978,"byte_end":75986,"line_start":2140,"line_end":2140,"column_start":40,"column_end":48},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":76570,"byte_end":76578,"line_start":2159,"line_end":2159,"column_start":34,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77311,"byte_end":77319,"line_start":2180,"line_end":2180,"column_start":46,"column_end":54},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77715,"byte_end":77723,"line_start":2194,"line_end":2194,"column_start":27,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":77957,"byte_end":77965,"line_start":2204,"line_end":2204,"column_start":60,"column_end":68},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/map.rs","byte_start":78330,"byte_end":78338,"line_start":2221,"line_end":2221,"column_start":22,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":90272,"byte_end":90280,"line_start":77,"line_end":77,"column_start":24,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1229},"to":{"krate":0,"index":1140}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":90749,"byte_end":90757,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1229},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91182,"byte_end":91190,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":91623,"byte_end":91631,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":92829,"byte_end":92837,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":103773,"byte_end":103781,"line_start":531,"line_end":531,"column_start":12,"column_end":20},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105439,"byte_end":105447,"line_start":579,"line_end":579,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":856},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105544,"byte_end":105552,"line_start":585,"line_end":585,"column_start":33,"column_end":41},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":856},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105696,"byte_end":105704,"line_start":591,"line_end":591,"column_start":31,"column_end":39},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":856},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":105807,"byte_end":105815,"line_start":597,"line_end":597,"column_start":36,"column_end":44},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":856},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106346,"byte_end":106350,"line_start":615,"line_end":615,"column_start":26,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106463,"byte_end":106467,"line_start":621,"line_end":621,"column_start":37,"column_end":41},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106623,"byte_end":106627,"line_start":627,"line_end":627,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106721,"byte_end":106725,"line_start":633,"line_end":633,"column_start":23,"column_end":27},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":106875,"byte_end":106879,"line_start":641,"line_end":641,"column_start":40,"column_end":44},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107364,"byte_end":107369,"line_start":658,"line_end":658,"column_start":26,"column_end":31},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":895},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107474,"byte_end":107479,"line_start":664,"line_end":664,"column_start":37,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":895},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":107795,"byte_end":107803,"line_start":681,"line_end":681,"column_start":29,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1229},"to":{"krate":2,"index":7783}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108066,"byte_end":108074,"line_start":696,"line_end":696,"column_start":32,"column_end":40},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1229},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108369,"byte_end":108377,"line_start":709,"line_end":709,"column_start":26,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1229},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108628,"byte_end":108636,"line_start":720,"line_end":720,"column_start":34,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1229},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":108917,"byte_end":108925,"line_start":731,"line_end":731,"column_start":24,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1229},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109155,"byte_end":109163,"line_start":743,"line_end":743,"column_start":48,"column_end":56},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1229},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109377,"byte_end":109385,"line_start":754,"line_end":754,"column_start":19,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1229},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":109452,"byte_end":109460,"line_start":761,"line_end":761,"column_start":12,"column_end":20},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":110813,"byte_end":110823,"line_start":807,"line_end":807,"column_start":29,"column_end":39},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":961},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111261,"byte_end":111271,"line_start":828,"line_end":828,"column_start":40,"column_end":50},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":961},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111585,"byte_end":111595,"line_start":843,"line_end":843,"column_start":26,"column_end":36},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":961},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":111765,"byte_end":111775,"line_start":852,"line_end":852,"column_start":31,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":961},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112394,"byte_end":112406,"line_start":874,"line_end":874,"column_start":29,"column_end":41},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":112843,"byte_end":112855,"line_start":895,"line_end":895,"column_start":40,"column_end":52},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113168,"byte_end":113180,"line_start":910,"line_end":910,"column_start":26,"column_end":38},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":113352,"byte_end":113364,"line_start":919,"line_end":919,"column_start":31,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114045,"byte_end":114064,"line_start":940,"line_end":940,"column_start":34,"column_end":53},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114523,"byte_end":114542,"line_start":964,"line_end":964,"column_start":45,"column_end":64},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114747,"byte_end":114766,"line_start":975,"line_end":975,"column_start":31,"column_end":50},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":114935,"byte_end":114954,"line_start":983,"line_end":983,"column_start":36,"column_end":55},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115563,"byte_end":115568,"line_start":1005,"line_end":1005,"column_start":29,"column_end":34},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1052},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":115995,"byte_end":116000,"line_start":1028,"line_end":1028,"column_start":40,"column_end":45},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1052},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116173,"byte_end":116178,"line_start":1038,"line_end":1038,"column_start":26,"column_end":31},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1052},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/set.rs","byte_start":116323,"byte_end":116328,"line_start":1046,"line_end":1046,"column_start":31,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1052},"to":{"krate":2,"index":9680}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3147,"byte_end":3156,"line_start":101,"line_end":101,"column_start":6,"column_end":15},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3248,"byte_end":3257,"line_start":108,"line_end":108,"column_start":16,"column_end":25},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1259},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3345,"byte_end":3354,"line_start":114,"line_end":114,"column_start":20,"column_end":29},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1259},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.2/src/lib.rs","byte_start":3556,"byte_end":3562,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1265},"to":{"krate":4294967295,"index":4294967295}}]}