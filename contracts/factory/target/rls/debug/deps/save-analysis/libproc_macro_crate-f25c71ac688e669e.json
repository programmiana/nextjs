{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5","program":"/Users/DVF/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","proc_macro_crate","--edition=2018","/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=f25c71ac688e669e","-C","extra-filename=-f25c71ac688e669e","--out-dir","/Users/DVF/Projects/created/nftberlin-hackathon/contracts/factory/target/rls/debug/deps","-L","dependency=/Users/DVF/Projects/created/nftberlin-hackathon/contracts/factory/target/rls/debug/deps","--extern","toml=/Users/DVF/Projects/created/nftberlin-hackathon/contracts/factory/target/rls/debug/deps/libtoml-4b6754a364bad9ee.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/DVF/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/DVF/Projects/created/nftberlin-hackathon/contracts/factory/target/rls/debug/deps/libproc_macro_crate-f25c71ac688e669e.rmeta"},"prelude":{"crate_id":{"name":"proc_macro_crate","disambiguator":[4987491527375152226,0]},"crate_root":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src","external_crates":[{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18005471550560613154,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5950131627965951498,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2741719692070475021,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2794630430347630357,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11571400143354356751,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7193487377502419209,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3984647143510438201,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12184698882915890589,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[11618273138748747847,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10066305145840536466,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6325594472561512306,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17413800936977720645,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[13105407555381832082,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[2532692864303013170,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3831727617617568246,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[14168850698196268560,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[14481778817480203751,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[3413086096283251618,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[5901939098322418461,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":20,"id":{"name":"toml","disambiguator":[363420030994793991,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":21,"id":{"name":"serde","disambiguator":[84173604595226817,0]}},{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","num":22,"id":{"name":"serde_derive","disambiguator":[1134153363123649549,0]}}],"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":0,"byte_end":8418,"line_start":1,"line_end":274,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":0,"byte_end":8418,"line_start":1,"line_end":274,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":50},{"krate":0,"index":53}],"decl_id":null,"docs":"\n[![](https://docs.rs/proc-macro-crate/badge.svg)](https://docs.rs/proc-macro-crate/) [![](https://img.shields.io/crates/v/proc-macro-crate.svg)](https://crates.io/crates/proc-macro-crate) [![](https://img.shields.io/crates/d/proc-macro-crate.png)](https://crates.io/crates/proc-macro-crate) [![Build Status](https://travis-ci.org/bkchr/proc-macro-crate.png?branch=master)](https://travis-ci.org/bkchr/proc-macro-crate)","sig":null,"attributes":[{"value":"*\n\n[![](https://docs.rs/proc-macro-crate/badge.svg)](https://docs.rs/proc-macro-crate/) [![](https://img.shields.io/crates/v/proc-macro-crate.svg)](https://crates.io/crates/proc-macro-crate) [![](https://img.shields.io/crates/d/proc-macro-crate.png)](https://crates.io/crates/proc-macro-crate) [![Build Status](https://travis-ci.org/bkchr/proc-macro-crate.png?branch=master)](https://travis-ci.org/bkchr/proc-macro-crate)\n\nProviding support for `$crate` in procedural macros.\n\n* [Introduction](#introduction)\n* [Example](#example)\n* [License](#license)\n\n## Introduction\n\nIn `macro_rules!` `$crate` is used to get the path of the crate where a macro is declared in. In\nprocedural macros there is currently no easy way to get this path. A common hack is to import the\ndesired crate with a know name and use this. However, with rust edition 2018 and dropping\n`extern crate` declarations from `lib.rs`, people start to rename crates in `Cargo.toml` directly.\nHowever, this breaks importing the crate, as the proc-macro developer does not know the renamed\nname of the crate that should be imported.\n\nThis crate provides a way to get the name of a crate, even if it renamed in `Cargo.toml`. For this\npurpose a single function `crate_name` is provided. This function needs to be called in the context\nof a proc-macro with the name of the desired crate. `CARGO_MANIFEST_DIR` will be used to find the\ncurrent active `Cargo.toml` and this `Cargo.toml` is searched for the desired crate. The returned\nname of `crate_name` is either the given original rename (crate not renamed) or the renamed name.\n\n## Example\n\n```\nuse quote::quote;\nuse syn::Ident;\nuse proc_macro2::Span;\nuse proc_macro_crate::crate_name;\n\nfn import_my_crate() {\n    let name = crate_name(\"my-crate\").expect(\"my-crate is present in `Cargo.toml`\");\n    let ident = Ident::new(&name, Span::call_site());\n    quote!( extern crate #ident as my_crate_known_name );\n}\n\n# fn main() {}\n```\n\n## License\n\nLicensed under either of\n\n * [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\n * [MIT license](http://opensource.org/licenses/MIT)\n\nat your option.\n*/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":0,"byte_end":2130,"line_start":1,"line_end":52,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":3003,"byte_end":3013,"line_start":82,"line_end":82,"column_start":8,"column_end":18},"name":"crate_name","qualname":"::crate_name","value":"pub fn crate_name(&str) -> Result<String, String>","parent":null,"children":[],"decl_id":null,"docs":" Find the crate name for the given `orig_name` in the current `Cargo.toml`.","sig":null,"attributes":[{"value":"/ Find the crate name for the given `orig_name` in the current `Cargo.toml`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2336,"byte_end":2414,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2415,"byte_end":2418,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ `orig_name` should be the original name of the searched crate.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2419,"byte_end":2485,"line_start":69,"line_end":69,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2486,"byte_end":2489,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The current `Cargo.toml` is determined by taking `CARGO_MANIFEST_DIR/Cargo.toml`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2490,"byte_end":2575,"line_start":71,"line_end":71,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2576,"byte_end":2579,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2580,"byte_end":2593,"line_start":73,"line_end":73,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2594,"byte_end":2597,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ - `Ok(orig_name)` if the crate was found, but not renamed in the `Cargo.toml`.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2598,"byte_end":2680,"line_start":75,"line_end":75,"column_start":1,"column_end":83}},{"value":"/ - `Ok(RENAMED)` if the crate was found, but is renamed in the `Cargo.toml`. `RENAMED` will be","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2681,"byte_end":2778,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"/ the renamed name.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2779,"byte_end":2800,"line_start":77,"line_end":77,"column_start":1,"column_end":22}},{"value":"/ - `Err` if an error occurred.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2801,"byte_end":2834,"line_start":78,"line_end":78,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2835,"byte_end":2838,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ The returned crate name is sanitized in such a way that it is a valid rust identifier. Thus,","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2839,"byte_end":2935,"line_start":80,"line_end":80,"column_start":1,"column_end":97}},{"value":"/ it is ready to be used in `extern crate` as identifier.","span":{"file_name":"/Users/DVF/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-crate-0.1.5/src/lib.rs","byte_start":2936,"byte_end":2995,"line_start":81,"line_end":81,"column_start":1,"column_end":60}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}